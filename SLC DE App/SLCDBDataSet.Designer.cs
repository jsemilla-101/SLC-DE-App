//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SLC_DE_App {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SLCDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SLCDBDataSet : global::System.Data.DataSet {
        
        private tbldesignationDataTable tabletbldesignation;
        
        private tblslcrecordsDataTable tabletblslcrecords;
        
        private tblslctaskstatusDataTable tabletblslctaskstatus;
        
        private tbluserDataTable tabletbluser;
        
        private tblslcrecordstaskhistoryDataTable tabletblslcrecordstaskhistory;
        
        private getaskhistoryDataTable tablegetaskhistory;
        
        private tblslcrecordstaskhistoryeditsDataTable tabletblslcrecordstaskhistoryedits;
        
        private getslctopcustomerpendingamountDataTable tablegetslctopcustomerpendingamount;
        
        private global::System.Data.DataRelation relationtblslcedithistory;
        
        private global::System.Data.DataRelation relationTASK_DATA_EDITS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SLCDBDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SLCDBDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbldesignation"] != null)) {
                    base.Tables.Add(new tbldesignationDataTable(ds.Tables["tbldesignation"]));
                }
                if ((ds.Tables["tblslcrecords"] != null)) {
                    base.Tables.Add(new tblslcrecordsDataTable(ds.Tables["tblslcrecords"]));
                }
                if ((ds.Tables["tblslctaskstatus"] != null)) {
                    base.Tables.Add(new tblslctaskstatusDataTable(ds.Tables["tblslctaskstatus"]));
                }
                if ((ds.Tables["tbluser"] != null)) {
                    base.Tables.Add(new tbluserDataTable(ds.Tables["tbluser"]));
                }
                if ((ds.Tables["tblslcrecordstaskhistory"] != null)) {
                    base.Tables.Add(new tblslcrecordstaskhistoryDataTable(ds.Tables["tblslcrecordstaskhistory"]));
                }
                if ((ds.Tables["getaskhistory"] != null)) {
                    base.Tables.Add(new getaskhistoryDataTable(ds.Tables["getaskhistory"]));
                }
                if ((ds.Tables["tblslcrecordstaskhistoryedits"] != null)) {
                    base.Tables.Add(new tblslcrecordstaskhistoryeditsDataTable(ds.Tables["tblslcrecordstaskhistoryedits"]));
                }
                if ((ds.Tables["getslctopcustomerpendingamount"] != null)) {
                    base.Tables.Add(new getslctopcustomerpendingamountDataTable(ds.Tables["getslctopcustomerpendingamount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbldesignationDataTable tbldesignation {
            get {
                return this.tabletbldesignation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblslcrecordsDataTable tblslcrecords {
            get {
                return this.tabletblslcrecords;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblslctaskstatusDataTable tblslctaskstatus {
            get {
                return this.tabletblslctaskstatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbluserDataTable tbluser {
            get {
                return this.tabletbluser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblslcrecordstaskhistoryDataTable tblslcrecordstaskhistory {
            get {
                return this.tabletblslcrecordstaskhistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public getaskhistoryDataTable getaskhistory {
            get {
                return this.tablegetaskhistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblslcrecordstaskhistoryeditsDataTable tblslcrecordstaskhistoryedits {
            get {
                return this.tabletblslcrecordstaskhistoryedits;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public getslctopcustomerpendingamountDataTable getslctopcustomerpendingamount {
            get {
                return this.tablegetslctopcustomerpendingamount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SLCDBDataSet cln = ((SLCDBDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tbldesignation"] != null)) {
                    base.Tables.Add(new tbldesignationDataTable(ds.Tables["tbldesignation"]));
                }
                if ((ds.Tables["tblslcrecords"] != null)) {
                    base.Tables.Add(new tblslcrecordsDataTable(ds.Tables["tblslcrecords"]));
                }
                if ((ds.Tables["tblslctaskstatus"] != null)) {
                    base.Tables.Add(new tblslctaskstatusDataTable(ds.Tables["tblslctaskstatus"]));
                }
                if ((ds.Tables["tbluser"] != null)) {
                    base.Tables.Add(new tbluserDataTable(ds.Tables["tbluser"]));
                }
                if ((ds.Tables["tblslcrecordstaskhistory"] != null)) {
                    base.Tables.Add(new tblslcrecordstaskhistoryDataTable(ds.Tables["tblslcrecordstaskhistory"]));
                }
                if ((ds.Tables["getaskhistory"] != null)) {
                    base.Tables.Add(new getaskhistoryDataTable(ds.Tables["getaskhistory"]));
                }
                if ((ds.Tables["tblslcrecordstaskhistoryedits"] != null)) {
                    base.Tables.Add(new tblslcrecordstaskhistoryeditsDataTable(ds.Tables["tblslcrecordstaskhistoryedits"]));
                }
                if ((ds.Tables["getslctopcustomerpendingamount"] != null)) {
                    base.Tables.Add(new getslctopcustomerpendingamountDataTable(ds.Tables["getslctopcustomerpendingamount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabletbldesignation = ((tbldesignationDataTable)(base.Tables["tbldesignation"]));
            if ((initTable == true)) {
                if ((this.tabletbldesignation != null)) {
                    this.tabletbldesignation.InitVars();
                }
            }
            this.tabletblslcrecords = ((tblslcrecordsDataTable)(base.Tables["tblslcrecords"]));
            if ((initTable == true)) {
                if ((this.tabletblslcrecords != null)) {
                    this.tabletblslcrecords.InitVars();
                }
            }
            this.tabletblslctaskstatus = ((tblslctaskstatusDataTable)(base.Tables["tblslctaskstatus"]));
            if ((initTable == true)) {
                if ((this.tabletblslctaskstatus != null)) {
                    this.tabletblslctaskstatus.InitVars();
                }
            }
            this.tabletbluser = ((tbluserDataTable)(base.Tables["tbluser"]));
            if ((initTable == true)) {
                if ((this.tabletbluser != null)) {
                    this.tabletbluser.InitVars();
                }
            }
            this.tabletblslcrecordstaskhistory = ((tblslcrecordstaskhistoryDataTable)(base.Tables["tblslcrecordstaskhistory"]));
            if ((initTable == true)) {
                if ((this.tabletblslcrecordstaskhistory != null)) {
                    this.tabletblslcrecordstaskhistory.InitVars();
                }
            }
            this.tablegetaskhistory = ((getaskhistoryDataTable)(base.Tables["getaskhistory"]));
            if ((initTable == true)) {
                if ((this.tablegetaskhistory != null)) {
                    this.tablegetaskhistory.InitVars();
                }
            }
            this.tabletblslcrecordstaskhistoryedits = ((tblslcrecordstaskhistoryeditsDataTable)(base.Tables["tblslcrecordstaskhistoryedits"]));
            if ((initTable == true)) {
                if ((this.tabletblslcrecordstaskhistoryedits != null)) {
                    this.tabletblslcrecordstaskhistoryedits.InitVars();
                }
            }
            this.tablegetslctopcustomerpendingamount = ((getslctopcustomerpendingamountDataTable)(base.Tables["getslctopcustomerpendingamount"]));
            if ((initTable == true)) {
                if ((this.tablegetslctopcustomerpendingamount != null)) {
                    this.tablegetslctopcustomerpendingamount.InitVars();
                }
            }
            this.relationtblslcedithistory = this.Relations["tblslcedithistory"];
            this.relationTASK_DATA_EDITS = this.Relations["TASK DATA EDITS"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SLCDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SLCDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletbldesignation = new tbldesignationDataTable();
            base.Tables.Add(this.tabletbldesignation);
            this.tabletblslcrecords = new tblslcrecordsDataTable();
            base.Tables.Add(this.tabletblslcrecords);
            this.tabletblslctaskstatus = new tblslctaskstatusDataTable();
            base.Tables.Add(this.tabletblslctaskstatus);
            this.tabletbluser = new tbluserDataTable();
            base.Tables.Add(this.tabletbluser);
            this.tabletblslcrecordstaskhistory = new tblslcrecordstaskhistoryDataTable();
            base.Tables.Add(this.tabletblslcrecordstaskhistory);
            this.tablegetaskhistory = new getaskhistoryDataTable();
            base.Tables.Add(this.tablegetaskhistory);
            this.tabletblslcrecordstaskhistoryedits = new tblslcrecordstaskhistoryeditsDataTable();
            base.Tables.Add(this.tabletblslcrecordstaskhistoryedits);
            this.tablegetslctopcustomerpendingamount = new getslctopcustomerpendingamountDataTable();
            base.Tables.Add(this.tablegetslctopcustomerpendingamount);
            this.relationtblslcedithistory = new global::System.Data.DataRelation("tblslcedithistory", new global::System.Data.DataColumn[] {
                        this.tabletblslcrecordstaskhistory.slctaskhistidColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblslcrecordstaskhistoryedits.edittaskhistidColumn}, false);
            this.Relations.Add(this.relationtblslcedithistory);
            this.relationTASK_DATA_EDITS = new global::System.Data.DataRelation("TASK DATA EDITS", new global::System.Data.DataColumn[] {
                        this.tablegetaskhistory.slctaskhistidColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblslcrecordstaskhistoryedits.edittaskhistidColumn}, false);
            this.Relations.Add(this.relationTASK_DATA_EDITS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetbldesignation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblslcrecords() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblslctaskstatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetbluser() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblslcrecordstaskhistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializegetaskhistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblslcrecordstaskhistoryedits() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializegetslctopcustomerpendingamount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SLCDBDataSet ds = new SLCDBDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tbldesignationRowChangeEventHandler(object sender, tbldesignationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblslcrecordsRowChangeEventHandler(object sender, tblslcrecordsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblslctaskstatusRowChangeEventHandler(object sender, tblslctaskstatusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tbluserRowChangeEventHandler(object sender, tbluserRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblslcrecordstaskhistoryRowChangeEventHandler(object sender, tblslcrecordstaskhistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void getaskhistoryRowChangeEventHandler(object sender, getaskhistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblslcrecordstaskhistoryeditsRowChangeEventHandler(object sender, tblslcrecordstaskhistoryeditsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void getslctopcustomerpendingamountRowChangeEventHandler(object sender, getslctopcustomerpendingamountRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbldesignationDataTable : global::System.Data.TypedTableBase<tbldesignationRow> {
            
            private global::System.Data.DataColumn columndesigid;
            
            private global::System.Data.DataColumn columndesignname;
            
            private global::System.Data.DataColumn columndesignstat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbldesignationDataTable() {
                this.TableName = "tbldesignation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tbldesignationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tbldesignationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn desigidColumn {
                get {
                    return this.columndesigid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn designnameColumn {
                get {
                    return this.columndesignname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn designstatColumn {
                get {
                    return this.columndesignstat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbldesignationRow this[int index] {
                get {
                    return ((tbldesignationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tbldesignationRowChangeEventHandler tbldesignationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tbldesignationRowChangeEventHandler tbldesignationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tbldesignationRowChangeEventHandler tbldesignationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tbldesignationRowChangeEventHandler tbldesignationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtbldesignationRow(tbldesignationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbldesignationRow AddtbldesignationRow(long desigid, string designname, bool designstat) {
                tbldesignationRow rowtbldesignationRow = ((tbldesignationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        desigid,
                        designname,
                        designstat};
                rowtbldesignationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbldesignationRow);
                return rowtbldesignationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbldesignationRow FindBydesigid(long desigid) {
                return ((tbldesignationRow)(this.Rows.Find(new object[] {
                            desigid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tbldesignationDataTable cln = ((tbldesignationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbldesignationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columndesigid = base.Columns["desigid"];
                this.columndesignname = base.Columns["designname"];
                this.columndesignstat = base.Columns["designstat"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columndesigid = new global::System.Data.DataColumn("desigid", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesigid);
                this.columndesignname = new global::System.Data.DataColumn("designname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignname);
                this.columndesignstat = new global::System.Data.DataColumn("designstat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignstat);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndesigid}, true));
                this.columndesigid.AllowDBNull = false;
                this.columndesigid.Unique = true;
                this.columndesignname.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbldesignationRow NewtbldesignationRow() {
                return ((tbldesignationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbldesignationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tbldesignationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbldesignationRowChanged != null)) {
                    this.tbldesignationRowChanged(this, new tbldesignationRowChangeEvent(((tbldesignationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbldesignationRowChanging != null)) {
                    this.tbldesignationRowChanging(this, new tbldesignationRowChangeEvent(((tbldesignationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbldesignationRowDeleted != null)) {
                    this.tbldesignationRowDeleted(this, new tbldesignationRowChangeEvent(((tbldesignationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbldesignationRowDeleting != null)) {
                    this.tbldesignationRowDeleting(this, new tbldesignationRowChangeEvent(((tbldesignationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetbldesignationRow(tbldesignationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SLCDBDataSet ds = new SLCDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbldesignationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblslcrecordsDataTable : global::System.Data.TypedTableBase<tblslcrecordsRow> {
            
            private global::System.Data.DataColumn columnslc_id;
            
            private global::System.Data.DataColumn columnslc_uploaddate;
            
            private global::System.Data.DataColumn columnslc_customercode;
            
            private global::System.Data.DataColumn columnslc_customername;
            
            private global::System.Data.DataColumn columnslc_salesordercode;
            
            private global::System.Data.DataColumn columnslc_invoicecode;
            
            private global::System.Data.DataColumn columnslc_dispatchdate;
            
            private global::System.Data.DataColumn columnslc_duedate;
            
            private global::System.Data.DataColumn columnslc_salesamount;
            
            private global::System.Data.DataColumn columnslc_recieptamount;
            
            private global::System.Data.DataColumn columnslc_returnamount;
            
            private global::System.Data.DataColumn columnslc_refundamount;
            
            private global::System.Data.DataColumn columnslc_storecreditbalance;
            
            private global::System.Data.DataColumn columnslc_pendingbalance;
            
            private global::System.Data.DataColumn columnslc_customerpendingamount;
            
            private global::System.Data.DataColumn columnslc_assignee;
            
            private global::System.Data.DataColumn columnslc_status;
            
            private global::System.Data.DataColumn columnslc_remarks;
            
            private global::System.Data.DataColumn columnslc_prepby;
            
            private global::System.Data.DataColumn columnslc_isemailexist;
            
            private global::System.Data.DataColumn columnslc_lastdatetimecalled;
            
            private global::System.Data.DataColumn columnslc_lastdatetimeupdated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordsDataTable() {
                this.TableName = "tblslcrecords";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblslcrecordsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblslcrecordsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_idColumn {
                get {
                    return this.columnslc_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_uploaddateColumn {
                get {
                    return this.columnslc_uploaddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_customercodeColumn {
                get {
                    return this.columnslc_customercode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_customernameColumn {
                get {
                    return this.columnslc_customername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_salesordercodeColumn {
                get {
                    return this.columnslc_salesordercode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_invoicecodeColumn {
                get {
                    return this.columnslc_invoicecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_dispatchdateColumn {
                get {
                    return this.columnslc_dispatchdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_duedateColumn {
                get {
                    return this.columnslc_duedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_salesamountColumn {
                get {
                    return this.columnslc_salesamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_recieptamountColumn {
                get {
                    return this.columnslc_recieptamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_returnamountColumn {
                get {
                    return this.columnslc_returnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_refundamountColumn {
                get {
                    return this.columnslc_refundamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_storecreditbalanceColumn {
                get {
                    return this.columnslc_storecreditbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_pendingbalanceColumn {
                get {
                    return this.columnslc_pendingbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_customerpendingamountColumn {
                get {
                    return this.columnslc_customerpendingamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_assigneeColumn {
                get {
                    return this.columnslc_assignee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_statusColumn {
                get {
                    return this.columnslc_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_remarksColumn {
                get {
                    return this.columnslc_remarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_prepbyColumn {
                get {
                    return this.columnslc_prepby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_isemailexistColumn {
                get {
                    return this.columnslc_isemailexist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_lastdatetimecalledColumn {
                get {
                    return this.columnslc_lastdatetimecalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_lastdatetimeupdatedColumn {
                get {
                    return this.columnslc_lastdatetimeupdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordsRow this[int index] {
                get {
                    return ((tblslcrecordsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordsRowChangeEventHandler tblslcrecordsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordsRowChangeEventHandler tblslcrecordsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordsRowChangeEventHandler tblslcrecordsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordsRowChangeEventHandler tblslcrecordsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblslcrecordsRow(tblslcrecordsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordsRow AddtblslcrecordsRow(
                        long slc_id, 
                        System.DateTime slc_uploaddate, 
                        string slc_customercode, 
                        string slc_customername, 
                        string slc_salesordercode, 
                        string slc_invoicecode, 
                        System.DateTime slc_dispatchdate, 
                        System.DateTime slc_duedate, 
                        decimal slc_salesamount, 
                        decimal slc_recieptamount, 
                        decimal slc_returnamount, 
                        decimal slc_refundamount, 
                        decimal slc_storecreditbalance, 
                        decimal slc_pendingbalance, 
                        decimal slc_customerpendingamount, 
                        string slc_assignee, 
                        string slc_status, 
                        string slc_remarks, 
                        string slc_prepby, 
                        bool slc_isemailexist, 
                        System.DateTime slc_lastdatetimecalled, 
                        System.DateTime slc_lastdatetimeupdated) {
                tblslcrecordsRow rowtblslcrecordsRow = ((tblslcrecordsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        slc_id,
                        slc_uploaddate,
                        slc_customercode,
                        slc_customername,
                        slc_salesordercode,
                        slc_invoicecode,
                        slc_dispatchdate,
                        slc_duedate,
                        slc_salesamount,
                        slc_recieptamount,
                        slc_returnamount,
                        slc_refundamount,
                        slc_storecreditbalance,
                        slc_pendingbalance,
                        slc_customerpendingamount,
                        slc_assignee,
                        slc_status,
                        slc_remarks,
                        slc_prepby,
                        slc_isemailexist,
                        slc_lastdatetimecalled,
                        slc_lastdatetimeupdated};
                rowtblslcrecordsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblslcrecordsRow);
                return rowtblslcrecordsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordsRow FindByslc_id(long slc_id) {
                return ((tblslcrecordsRow)(this.Rows.Find(new object[] {
                            slc_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblslcrecordsDataTable cln = ((tblslcrecordsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblslcrecordsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnslc_id = base.Columns["slc_id"];
                this.columnslc_uploaddate = base.Columns["slc_uploaddate"];
                this.columnslc_customercode = base.Columns["slc_customercode"];
                this.columnslc_customername = base.Columns["slc_customername"];
                this.columnslc_salesordercode = base.Columns["slc_salesordercode"];
                this.columnslc_invoicecode = base.Columns["slc_invoicecode"];
                this.columnslc_dispatchdate = base.Columns["slc_dispatchdate"];
                this.columnslc_duedate = base.Columns["slc_duedate"];
                this.columnslc_salesamount = base.Columns["slc_salesamount"];
                this.columnslc_recieptamount = base.Columns["slc_recieptamount"];
                this.columnslc_returnamount = base.Columns["slc_returnamount"];
                this.columnslc_refundamount = base.Columns["slc_refundamount"];
                this.columnslc_storecreditbalance = base.Columns["slc_storecreditbalance"];
                this.columnslc_pendingbalance = base.Columns["slc_pendingbalance"];
                this.columnslc_customerpendingamount = base.Columns["slc_customerpendingamount"];
                this.columnslc_assignee = base.Columns["slc_assignee"];
                this.columnslc_status = base.Columns["slc_status"];
                this.columnslc_remarks = base.Columns["slc_remarks"];
                this.columnslc_prepby = base.Columns["slc_prepby"];
                this.columnslc_isemailexist = base.Columns["slc_isemailexist"];
                this.columnslc_lastdatetimecalled = base.Columns["slc_lastdatetimecalled"];
                this.columnslc_lastdatetimeupdated = base.Columns["slc_lastdatetimeupdated"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnslc_id = new global::System.Data.DataColumn("slc_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_id);
                this.columnslc_uploaddate = new global::System.Data.DataColumn("slc_uploaddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_uploaddate);
                this.columnslc_customercode = new global::System.Data.DataColumn("slc_customercode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_customercode);
                this.columnslc_customername = new global::System.Data.DataColumn("slc_customername", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_customername);
                this.columnslc_salesordercode = new global::System.Data.DataColumn("slc_salesordercode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_salesordercode);
                this.columnslc_invoicecode = new global::System.Data.DataColumn("slc_invoicecode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_invoicecode);
                this.columnslc_dispatchdate = new global::System.Data.DataColumn("slc_dispatchdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_dispatchdate);
                this.columnslc_duedate = new global::System.Data.DataColumn("slc_duedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_duedate);
                this.columnslc_salesamount = new global::System.Data.DataColumn("slc_salesamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_salesamount);
                this.columnslc_recieptamount = new global::System.Data.DataColumn("slc_recieptamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_recieptamount);
                this.columnslc_returnamount = new global::System.Data.DataColumn("slc_returnamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_returnamount);
                this.columnslc_refundamount = new global::System.Data.DataColumn("slc_refundamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_refundamount);
                this.columnslc_storecreditbalance = new global::System.Data.DataColumn("slc_storecreditbalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_storecreditbalance);
                this.columnslc_pendingbalance = new global::System.Data.DataColumn("slc_pendingbalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_pendingbalance);
                this.columnslc_customerpendingamount = new global::System.Data.DataColumn("slc_customerpendingamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_customerpendingamount);
                this.columnslc_assignee = new global::System.Data.DataColumn("slc_assignee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_assignee);
                this.columnslc_status = new global::System.Data.DataColumn("slc_status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_status);
                this.columnslc_remarks = new global::System.Data.DataColumn("slc_remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_remarks);
                this.columnslc_prepby = new global::System.Data.DataColumn("slc_prepby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_prepby);
                this.columnslc_isemailexist = new global::System.Data.DataColumn("slc_isemailexist", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_isemailexist);
                this.columnslc_lastdatetimecalled = new global::System.Data.DataColumn("slc_lastdatetimecalled", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_lastdatetimecalled);
                this.columnslc_lastdatetimeupdated = new global::System.Data.DataColumn("slc_lastdatetimeupdated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_lastdatetimeupdated);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint4", new global::System.Data.DataColumn[] {
                                this.columnslc_id}, true));
                this.columnslc_id.AllowDBNull = false;
                this.columnslc_id.Unique = true;
                this.columnslc_id.Caption = "DB ID";
                this.columnslc_uploaddate.AllowDBNull = false;
                this.columnslc_uploaddate.Caption = "DATE UPLOADED";
                this.columnslc_customercode.Caption = "CUSTOMER CODE";
                this.columnslc_customercode.MaxLength = 15;
                this.columnslc_customername.Caption = "CUSTOMER NAME";
                this.columnslc_customername.MaxLength = 15;
                this.columnslc_salesordercode.Caption = "S.O. CODE";
                this.columnslc_salesordercode.MaxLength = 15;
                this.columnslc_invoicecode.Caption = "INVOICE CODE";
                this.columnslc_invoicecode.MaxLength = 15;
                this.columnslc_dispatchdate.Caption = "DISPATCH DATE";
                this.columnslc_duedate.Caption = "DUE DATE";
                this.columnslc_salesamount.Caption = "SALES AMOUNT";
                this.columnslc_recieptamount.Caption = "RECEIPT AMOUNT";
                this.columnslc_returnamount.Caption = "RETURN AMOUNT";
                this.columnslc_refundamount.Caption = "REFUND AMOUNT";
                this.columnslc_storecreditbalance.Caption = "STORE CREDIT BALANCE";
                this.columnslc_pendingbalance.Caption = "PENDING BALANCE";
                this.columnslc_customerpendingamount.Caption = "CUSTOMER PENDING AMOUNT";
                this.columnslc_assignee.Caption = "ASSIGNEE";
                this.columnslc_assignee.MaxLength = 10;
                this.columnslc_status.Caption = "STATUS";
                this.columnslc_status.MaxLength = 15;
                this.columnslc_remarks.Caption = "REMARKS";
                this.columnslc_remarks.MaxLength = 50;
                this.columnslc_prepby.Caption = "PREPARED BY";
                this.columnslc_prepby.MaxLength = 10;
                this.columnslc_isemailexist.Caption = "IS EMAIL EXIST";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordsRow NewtblslcrecordsRow() {
                return ((tblslcrecordsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblslcrecordsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblslcrecordsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblslcrecordsRowChanged != null)) {
                    this.tblslcrecordsRowChanged(this, new tblslcrecordsRowChangeEvent(((tblslcrecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblslcrecordsRowChanging != null)) {
                    this.tblslcrecordsRowChanging(this, new tblslcrecordsRowChangeEvent(((tblslcrecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblslcrecordsRowDeleted != null)) {
                    this.tblslcrecordsRowDeleted(this, new tblslcrecordsRowChangeEvent(((tblslcrecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblslcrecordsRowDeleting != null)) {
                    this.tblslcrecordsRowDeleting(this, new tblslcrecordsRowChangeEvent(((tblslcrecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblslcrecordsRow(tblslcrecordsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SLCDBDataSet ds = new SLCDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblslcrecordsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblslctaskstatusDataTable : global::System.Data.TypedTableBase<tblslctaskstatusRow> {
            
            private global::System.Data.DataColumn columntaskstatid;
            
            private global::System.Data.DataColumn columntaskstatname;
            
            private global::System.Data.DataColumn columntaskstataddedby;
            
            private global::System.Data.DataColumn columntaskstatdateadded;
            
            private global::System.Data.DataColumn columntaskstatisactive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslctaskstatusDataTable() {
                this.TableName = "tblslctaskstatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblslctaskstatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblslctaskstatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taskstatidColumn {
                get {
                    return this.columntaskstatid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taskstatnameColumn {
                get {
                    return this.columntaskstatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taskstataddedbyColumn {
                get {
                    return this.columntaskstataddedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taskstatdateaddedColumn {
                get {
                    return this.columntaskstatdateadded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taskstatisactiveColumn {
                get {
                    return this.columntaskstatisactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslctaskstatusRow this[int index] {
                get {
                    return ((tblslctaskstatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslctaskstatusRowChangeEventHandler tblslctaskstatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslctaskstatusRowChangeEventHandler tblslctaskstatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslctaskstatusRowChangeEventHandler tblslctaskstatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslctaskstatusRowChangeEventHandler tblslctaskstatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblslctaskstatusRow(tblslctaskstatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslctaskstatusRow AddtblslctaskstatusRow(string taskstatname, string taskstataddedby, System.DateTime taskstatdateadded, bool taskstatisactive) {
                tblslctaskstatusRow rowtblslctaskstatusRow = ((tblslctaskstatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        taskstatname,
                        taskstataddedby,
                        taskstatdateadded,
                        taskstatisactive};
                rowtblslctaskstatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblslctaskstatusRow);
                return rowtblslctaskstatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslctaskstatusRow FindBytaskstatid(long taskstatid) {
                return ((tblslctaskstatusRow)(this.Rows.Find(new object[] {
                            taskstatid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblslctaskstatusDataTable cln = ((tblslctaskstatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblslctaskstatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columntaskstatid = base.Columns["taskstatid"];
                this.columntaskstatname = base.Columns["taskstatname"];
                this.columntaskstataddedby = base.Columns["taskstataddedby"];
                this.columntaskstatdateadded = base.Columns["taskstatdateadded"];
                this.columntaskstatisactive = base.Columns["taskstatisactive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columntaskstatid = new global::System.Data.DataColumn("taskstatid", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaskstatid);
                this.columntaskstatname = new global::System.Data.DataColumn("taskstatname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaskstatname);
                this.columntaskstataddedby = new global::System.Data.DataColumn("taskstataddedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaskstataddedby);
                this.columntaskstatdateadded = new global::System.Data.DataColumn("taskstatdateadded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaskstatdateadded);
                this.columntaskstatisactive = new global::System.Data.DataColumn("taskstatisactive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaskstatisactive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columntaskstatid}, true));
                this.columntaskstatid.AutoIncrement = true;
                this.columntaskstatid.AutoIncrementSeed = -1;
                this.columntaskstatid.AllowDBNull = false;
                this.columntaskstatid.Unique = true;
                this.columntaskstatid.Caption = "DB ID";
                this.columntaskstatname.Caption = "STATUS NAME";
                this.columntaskstatname.MaxLength = 200;
                this.columntaskstataddedby.Caption = "ADDED BY";
                this.columntaskstatdateadded.Caption = "DATE ADDED";
                this.columntaskstatisactive.Caption = "SHOW IN LIST";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslctaskstatusRow NewtblslctaskstatusRow() {
                return ((tblslctaskstatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblslctaskstatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblslctaskstatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblslctaskstatusRowChanged != null)) {
                    this.tblslctaskstatusRowChanged(this, new tblslctaskstatusRowChangeEvent(((tblslctaskstatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblslctaskstatusRowChanging != null)) {
                    this.tblslctaskstatusRowChanging(this, new tblslctaskstatusRowChangeEvent(((tblslctaskstatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblslctaskstatusRowDeleted != null)) {
                    this.tblslctaskstatusRowDeleted(this, new tblslctaskstatusRowChangeEvent(((tblslctaskstatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblslctaskstatusRowDeleting != null)) {
                    this.tblslctaskstatusRowDeleting(this, new tblslctaskstatusRowChangeEvent(((tblslctaskstatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblslctaskstatusRow(tblslctaskstatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SLCDBDataSet ds = new SLCDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblslctaskstatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbluserDataTable : global::System.Data.TypedTableBase<tbluserRow> {
            
            private global::System.Data.DataColumn columnuserid;
            
            private global::System.Data.DataColumn columnuserzohoid;
            
            private global::System.Data.DataColumn columnuseremailadd;
            
            private global::System.Data.DataColumn columnuserpass;
            
            private global::System.Data.DataColumn columnuserfname;
            
            private global::System.Data.DataColumn columnuserlname;
            
            private global::System.Data.DataColumn columnuserdesig;
            
            private global::System.Data.DataColumn columnuserreportingto;
            
            private global::System.Data.DataColumn columnuserisactive;
            
            private global::System.Data.DataColumn columnuserisloggedin;
            
            private global::System.Data.DataColumn columnusertotalappuptime;
            
            private global::System.Data.DataColumn columnusershift;
            
            private global::System.Data.DataColumn columnusertotalhrsrendered;
            
            private global::System.Data.DataColumn columnuserisadminrole;
            
            private global::System.Data.DataColumn columnfullname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbluserDataTable() {
                this.TableName = "tbluser";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tbluserDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tbluserDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn useridColumn {
                get {
                    return this.columnuserid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userzohoidColumn {
                get {
                    return this.columnuserzohoid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn useremailaddColumn {
                get {
                    return this.columnuseremailadd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userpassColumn {
                get {
                    return this.columnuserpass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userfnameColumn {
                get {
                    return this.columnuserfname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userlnameColumn {
                get {
                    return this.columnuserlname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userdesigColumn {
                get {
                    return this.columnuserdesig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userreportingtoColumn {
                get {
                    return this.columnuserreportingto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userisactiveColumn {
                get {
                    return this.columnuserisactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userisloggedinColumn {
                get {
                    return this.columnuserisloggedin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn usertotalappuptimeColumn {
                get {
                    return this.columnusertotalappuptime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn usershiftColumn {
                get {
                    return this.columnusershift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn usertotalhrsrenderedColumn {
                get {
                    return this.columnusertotalhrsrendered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userisadminroleColumn {
                get {
                    return this.columnuserisadminrole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullnameColumn {
                get {
                    return this.columnfullname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbluserRow this[int index] {
                get {
                    return ((tbluserRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tbluserRowChangeEventHandler tbluserRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tbluserRowChangeEventHandler tbluserRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tbluserRowChangeEventHandler tbluserRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tbluserRowChangeEventHandler tbluserRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtbluserRow(tbluserRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbluserRow AddtbluserRow(long userid, string userzohoid, string useremailadd, string userpass, string userfname, string userlname, long userdesig, long userreportingto, bool userisactive, bool userisloggedin, System.TimeSpan usertotalappuptime, long usershift, System.TimeSpan usertotalhrsrendered, bool userisadminrole, string fullname) {
                tbluserRow rowtbluserRow = ((tbluserRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        userid,
                        userzohoid,
                        useremailadd,
                        userpass,
                        userfname,
                        userlname,
                        userdesig,
                        userreportingto,
                        userisactive,
                        userisloggedin,
                        usertotalappuptime,
                        usershift,
                        usertotalhrsrendered,
                        userisadminrole,
                        fullname};
                rowtbluserRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbluserRow);
                return rowtbluserRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbluserRow FindByuserid(long userid) {
                return ((tbluserRow)(this.Rows.Find(new object[] {
                            userid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tbluserDataTable cln = ((tbluserDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbluserDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnuserid = base.Columns["userid"];
                this.columnuserzohoid = base.Columns["userzohoid"];
                this.columnuseremailadd = base.Columns["useremailadd"];
                this.columnuserpass = base.Columns["userpass"];
                this.columnuserfname = base.Columns["userfname"];
                this.columnuserlname = base.Columns["userlname"];
                this.columnuserdesig = base.Columns["userdesig"];
                this.columnuserreportingto = base.Columns["userreportingto"];
                this.columnuserisactive = base.Columns["userisactive"];
                this.columnuserisloggedin = base.Columns["userisloggedin"];
                this.columnusertotalappuptime = base.Columns["usertotalappuptime"];
                this.columnusershift = base.Columns["usershift"];
                this.columnusertotalhrsrendered = base.Columns["usertotalhrsrendered"];
                this.columnuserisadminrole = base.Columns["userisadminrole"];
                this.columnfullname = base.Columns["fullname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnuserid = new global::System.Data.DataColumn("userid", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserid);
                this.columnuserzohoid = new global::System.Data.DataColumn("userzohoid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserzohoid);
                this.columnuseremailadd = new global::System.Data.DataColumn("useremailadd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuseremailadd);
                this.columnuserpass = new global::System.Data.DataColumn("userpass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserpass);
                this.columnuserfname = new global::System.Data.DataColumn("userfname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfname);
                this.columnuserlname = new global::System.Data.DataColumn("userlname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserlname);
                this.columnuserdesig = new global::System.Data.DataColumn("userdesig", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserdesig);
                this.columnuserreportingto = new global::System.Data.DataColumn("userreportingto", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserreportingto);
                this.columnuserisactive = new global::System.Data.DataColumn("userisactive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserisactive);
                this.columnuserisloggedin = new global::System.Data.DataColumn("userisloggedin", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserisloggedin);
                this.columnusertotalappuptime = new global::System.Data.DataColumn("usertotalappuptime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusertotalappuptime);
                this.columnusershift = new global::System.Data.DataColumn("usershift", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusershift);
                this.columnusertotalhrsrendered = new global::System.Data.DataColumn("usertotalhrsrendered", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusertotalhrsrendered);
                this.columnuserisadminrole = new global::System.Data.DataColumn("userisadminrole", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserisadminrole);
                this.columnfullname = new global::System.Data.DataColumn("fullname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuserid}, true));
                this.columnuserid.AllowDBNull = false;
                this.columnuserid.Unique = true;
                this.columnuseremailadd.MaxLength = 150;
                this.columnuserfname.MaxLength = 100;
                this.columnuserlname.MaxLength = 100;
                this.columnfullname.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbluserRow NewtbluserRow() {
                return ((tbluserRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbluserRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tbluserRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbluserRowChanged != null)) {
                    this.tbluserRowChanged(this, new tbluserRowChangeEvent(((tbluserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbluserRowChanging != null)) {
                    this.tbluserRowChanging(this, new tbluserRowChangeEvent(((tbluserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbluserRowDeleted != null)) {
                    this.tbluserRowDeleted(this, new tbluserRowChangeEvent(((tbluserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbluserRowDeleting != null)) {
                    this.tbluserRowDeleting(this, new tbluserRowChangeEvent(((tbluserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetbluserRow(tbluserRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SLCDBDataSet ds = new SLCDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbluserDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblslcrecordstaskhistoryDataTable : global::System.Data.TypedTableBase<tblslcrecordstaskhistoryRow> {
            
            private global::System.Data.DataColumn columnslctaskhistid;
            
            private global::System.Data.DataColumn columnslctaskhistcustcode;
            
            private global::System.Data.DataColumn columnslctaskstart;
            
            private global::System.Data.DataColumn columnslctaskend;
            
            private global::System.Data.DataColumn columnslctaskstatus;
            
            private global::System.Data.DataColumn columnslctaskremarks;
            
            private global::System.Data.DataColumn columnslctaskcalledby;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryDataTable() {
                this.TableName = "tblslcrecordstaskhistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblslcrecordstaskhistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblslcrecordstaskhistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskhistidColumn {
                get {
                    return this.columnslctaskhistid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskhistcustcodeColumn {
                get {
                    return this.columnslctaskhistcustcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskstartColumn {
                get {
                    return this.columnslctaskstart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskendColumn {
                get {
                    return this.columnslctaskend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskstatusColumn {
                get {
                    return this.columnslctaskstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskremarksColumn {
                get {
                    return this.columnslctaskremarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskcalledbyColumn {
                get {
                    return this.columnslctaskcalledby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryRow this[int index] {
                get {
                    return ((tblslcrecordstaskhistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordstaskhistoryRowChangeEventHandler tblslcrecordstaskhistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordstaskhistoryRowChangeEventHandler tblslcrecordstaskhistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordstaskhistoryRowChangeEventHandler tblslcrecordstaskhistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordstaskhistoryRowChangeEventHandler tblslcrecordstaskhistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblslcrecordstaskhistoryRow(tblslcrecordstaskhistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryRow AddtblslcrecordstaskhistoryRow(long slctaskhistid, string slctaskhistcustcode, System.DateTime slctaskstart, System.DateTime slctaskend, string slctaskstatus, string slctaskremarks, string slctaskcalledby) {
                tblslcrecordstaskhistoryRow rowtblslcrecordstaskhistoryRow = ((tblslcrecordstaskhistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        slctaskhistid,
                        slctaskhistcustcode,
                        slctaskstart,
                        slctaskend,
                        slctaskstatus,
                        slctaskremarks,
                        slctaskcalledby};
                rowtblslcrecordstaskhistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblslcrecordstaskhistoryRow);
                return rowtblslcrecordstaskhistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryRow FindByslctaskhistid(long slctaskhistid) {
                return ((tblslcrecordstaskhistoryRow)(this.Rows.Find(new object[] {
                            slctaskhistid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblslcrecordstaskhistoryDataTable cln = ((tblslcrecordstaskhistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblslcrecordstaskhistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnslctaskhistid = base.Columns["slctaskhistid"];
                this.columnslctaskhistcustcode = base.Columns["slctaskhistcustcode"];
                this.columnslctaskstart = base.Columns["slctaskstart"];
                this.columnslctaskend = base.Columns["slctaskend"];
                this.columnslctaskstatus = base.Columns["slctaskstatus"];
                this.columnslctaskremarks = base.Columns["slctaskremarks"];
                this.columnslctaskcalledby = base.Columns["slctaskcalledby"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnslctaskhistid = new global::System.Data.DataColumn("slctaskhistid", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskhistid);
                this.columnslctaskhistcustcode = new global::System.Data.DataColumn("slctaskhistcustcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskhistcustcode);
                this.columnslctaskstart = new global::System.Data.DataColumn("slctaskstart", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskstart);
                this.columnslctaskend = new global::System.Data.DataColumn("slctaskend", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskend);
                this.columnslctaskstatus = new global::System.Data.DataColumn("slctaskstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskstatus);
                this.columnslctaskremarks = new global::System.Data.DataColumn("slctaskremarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskremarks);
                this.columnslctaskcalledby = new global::System.Data.DataColumn("slctaskcalledby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskcalledby);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnslctaskhistid}, true));
                this.columnslctaskhistid.AllowDBNull = false;
                this.columnslctaskhistid.Unique = true;
                this.columnslctaskhistid.Caption = "DB ID";
                this.columnslctaskhistcustcode.AllowDBNull = false;
                this.columnslctaskhistcustcode.Caption = "CUSTOMER CODE";
                this.columnslctaskstart.Caption = "TASK STARTED";
                this.columnslctaskend.Caption = "TASK END";
                this.columnslctaskstatus.Caption = "STATUS";
                this.columnslctaskremarks.Caption = "REMARKS";
                this.columnslctaskcalledby.Caption = "AGENT";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryRow NewtblslcrecordstaskhistoryRow() {
                return ((tblslcrecordstaskhistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblslcrecordstaskhistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblslcrecordstaskhistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblslcrecordstaskhistoryRowChanged != null)) {
                    this.tblslcrecordstaskhistoryRowChanged(this, new tblslcrecordstaskhistoryRowChangeEvent(((tblslcrecordstaskhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblslcrecordstaskhistoryRowChanging != null)) {
                    this.tblslcrecordstaskhistoryRowChanging(this, new tblslcrecordstaskhistoryRowChangeEvent(((tblslcrecordstaskhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblslcrecordstaskhistoryRowDeleted != null)) {
                    this.tblslcrecordstaskhistoryRowDeleted(this, new tblslcrecordstaskhistoryRowChangeEvent(((tblslcrecordstaskhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblslcrecordstaskhistoryRowDeleting != null)) {
                    this.tblslcrecordstaskhistoryRowDeleting(this, new tblslcrecordstaskhistoryRowChangeEvent(((tblslcrecordstaskhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblslcrecordstaskhistoryRow(tblslcrecordstaskhistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SLCDBDataSet ds = new SLCDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblslcrecordstaskhistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class getaskhistoryDataTable : global::System.Data.TypedTableBase<getaskhistoryRow> {
            
            private global::System.Data.DataColumn columnslctaskhistid;
            
            private global::System.Data.DataColumn columnslctaskhistcustcode;
            
            private global::System.Data.DataColumn columnslctaskstart;
            
            private global::System.Data.DataColumn columnslctaskend;
            
            private global::System.Data.DataColumn columnslctaskstatus;
            
            private global::System.Data.DataColumn columnslctaskremarks;
            
            private global::System.Data.DataColumn columnslctaskcalledby;
            
            private global::System.Data.DataColumn columnslctaskduration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getaskhistoryDataTable() {
                this.TableName = "getaskhistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal getaskhistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected getaskhistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskhistidColumn {
                get {
                    return this.columnslctaskhistid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskhistcustcodeColumn {
                get {
                    return this.columnslctaskhistcustcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskstartColumn {
                get {
                    return this.columnslctaskstart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskendColumn {
                get {
                    return this.columnslctaskend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskstatusColumn {
                get {
                    return this.columnslctaskstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskremarksColumn {
                get {
                    return this.columnslctaskremarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskcalledbyColumn {
                get {
                    return this.columnslctaskcalledby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slctaskdurationColumn {
                get {
                    return this.columnslctaskduration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getaskhistoryRow this[int index] {
                get {
                    return ((getaskhistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event getaskhistoryRowChangeEventHandler getaskhistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event getaskhistoryRowChangeEventHandler getaskhistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event getaskhistoryRowChangeEventHandler getaskhistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event getaskhistoryRowChangeEventHandler getaskhistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddgetaskhistoryRow(getaskhistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getaskhistoryRow AddgetaskhistoryRow(long slctaskhistid, string slctaskhistcustcode, System.DateTime slctaskstart, System.DateTime slctaskend, string slctaskstatus, string slctaskremarks, string slctaskcalledby, System.TimeSpan slctaskduration) {
                getaskhistoryRow rowgetaskhistoryRow = ((getaskhistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        slctaskhistid,
                        slctaskhistcustcode,
                        slctaskstart,
                        slctaskend,
                        slctaskstatus,
                        slctaskremarks,
                        slctaskcalledby,
                        slctaskduration};
                rowgetaskhistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgetaskhistoryRow);
                return rowgetaskhistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getaskhistoryRow FindByslctaskhistid(long slctaskhistid) {
                return ((getaskhistoryRow)(this.Rows.Find(new object[] {
                            slctaskhistid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                getaskhistoryDataTable cln = ((getaskhistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new getaskhistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnslctaskhistid = base.Columns["slctaskhistid"];
                this.columnslctaskhistcustcode = base.Columns["slctaskhistcustcode"];
                this.columnslctaskstart = base.Columns["slctaskstart"];
                this.columnslctaskend = base.Columns["slctaskend"];
                this.columnslctaskstatus = base.Columns["slctaskstatus"];
                this.columnslctaskremarks = base.Columns["slctaskremarks"];
                this.columnslctaskcalledby = base.Columns["slctaskcalledby"];
                this.columnslctaskduration = base.Columns["slctaskduration"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnslctaskhistid = new global::System.Data.DataColumn("slctaskhistid", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskhistid);
                this.columnslctaskhistcustcode = new global::System.Data.DataColumn("slctaskhistcustcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskhistcustcode);
                this.columnslctaskstart = new global::System.Data.DataColumn("slctaskstart", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskstart);
                this.columnslctaskend = new global::System.Data.DataColumn("slctaskend", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskend);
                this.columnslctaskstatus = new global::System.Data.DataColumn("slctaskstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskstatus);
                this.columnslctaskremarks = new global::System.Data.DataColumn("slctaskremarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskremarks);
                this.columnslctaskcalledby = new global::System.Data.DataColumn("slctaskcalledby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskcalledby);
                this.columnslctaskduration = new global::System.Data.DataColumn("slctaskduration", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslctaskduration);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnslctaskhistid}, true));
                this.columnslctaskhistid.AllowDBNull = false;
                this.columnslctaskhistid.ReadOnly = true;
                this.columnslctaskhistid.Unique = true;
                this.columnslctaskhistid.Caption = "DB ID";
                this.columnslctaskhistcustcode.AllowDBNull = false;
                this.columnslctaskhistcustcode.ReadOnly = true;
                this.columnslctaskhistcustcode.Caption = "CUSTOMER CODE";
                this.columnslctaskstart.Caption = "TASK START";
                this.columnslctaskend.Caption = "TASK STOP";
                this.columnslctaskstatus.Caption = "STATUS";
                this.columnslctaskremarks.Caption = "REMARKS";
                this.columnslctaskcalledby.ReadOnly = true;
                this.columnslctaskcalledby.Caption = "AGENT";
                this.columnslctaskduration.ReadOnly = true;
                this.columnslctaskduration.Caption = "DURATION";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getaskhistoryRow NewgetaskhistoryRow() {
                return ((getaskhistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new getaskhistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(getaskhistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.getaskhistoryRowChanged != null)) {
                    this.getaskhistoryRowChanged(this, new getaskhistoryRowChangeEvent(((getaskhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.getaskhistoryRowChanging != null)) {
                    this.getaskhistoryRowChanging(this, new getaskhistoryRowChangeEvent(((getaskhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.getaskhistoryRowDeleted != null)) {
                    this.getaskhistoryRowDeleted(this, new getaskhistoryRowChangeEvent(((getaskhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.getaskhistoryRowDeleting != null)) {
                    this.getaskhistoryRowDeleting(this, new getaskhistoryRowChangeEvent(((getaskhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovegetaskhistoryRow(getaskhistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SLCDBDataSet ds = new SLCDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "getaskhistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblslcrecordstaskhistoryeditsDataTable : global::System.Data.TypedTableBase<tblslcrecordstaskhistoryeditsRow> {
            
            private global::System.Data.DataColumn columneditno;
            
            private global::System.Data.DataColumn columnedittaskhistid;
            
            private global::System.Data.DataColumn columnedituser;
            
            private global::System.Data.DataColumn columneditdatecreated;
            
            private global::System.Data.DataColumn columneditcolumndata;
            
            private global::System.Data.DataColumn columneditoldvalue;
            
            private global::System.Data.DataColumn columneditnewvalue;
            
            private global::System.Data.DataColumn columneditreason;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsDataTable() {
                this.TableName = "tblslcrecordstaskhistoryedits";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblslcrecordstaskhistoryeditsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblslcrecordstaskhistoryeditsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn editnoColumn {
                get {
                    return this.columneditno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn edittaskhistidColumn {
                get {
                    return this.columnedittaskhistid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn edituserColumn {
                get {
                    return this.columnedituser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn editdatecreatedColumn {
                get {
                    return this.columneditdatecreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn editcolumndataColumn {
                get {
                    return this.columneditcolumndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn editoldvalueColumn {
                get {
                    return this.columneditoldvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn editnewvalueColumn {
                get {
                    return this.columneditnewvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn editreasonColumn {
                get {
                    return this.columneditreason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsRow this[int index] {
                get {
                    return ((tblslcrecordstaskhistoryeditsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordstaskhistoryeditsRowChangeEventHandler tblslcrecordstaskhistoryeditsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordstaskhistoryeditsRowChangeEventHandler tblslcrecordstaskhistoryeditsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordstaskhistoryeditsRowChangeEventHandler tblslcrecordstaskhistoryeditsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblslcrecordstaskhistoryeditsRowChangeEventHandler tblslcrecordstaskhistoryeditsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblslcrecordstaskhistoryeditsRow(tblslcrecordstaskhistoryeditsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsRow AddtblslcrecordstaskhistoryeditsRow(long editno, tblslcrecordstaskhistoryRow parenttblslcrecordstaskhistoryRowBytblslcedithistory, string edituser, System.DateTime editdatecreated, string editcolumndata, string editoldvalue, string editnewvalue, string editreason) {
                tblslcrecordstaskhistoryeditsRow rowtblslcrecordstaskhistoryeditsRow = ((tblslcrecordstaskhistoryeditsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        editno,
                        null,
                        edituser,
                        editdatecreated,
                        editcolumndata,
                        editoldvalue,
                        editnewvalue,
                        editreason};
                if ((parenttblslcrecordstaskhistoryRowBytblslcedithistory != null)) {
                    columnValuesArray[1] = parenttblslcrecordstaskhistoryRowBytblslcedithistory[0];
                }
                rowtblslcrecordstaskhistoryeditsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblslcrecordstaskhistoryeditsRow);
                return rowtblslcrecordstaskhistoryeditsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsRow FindByeditnoedittaskhistid(long editno, long edittaskhistid) {
                return ((tblslcrecordstaskhistoryeditsRow)(this.Rows.Find(new object[] {
                            editno,
                            edittaskhistid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblslcrecordstaskhistoryeditsDataTable cln = ((tblslcrecordstaskhistoryeditsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblslcrecordstaskhistoryeditsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columneditno = base.Columns["editno"];
                this.columnedittaskhistid = base.Columns["edittaskhistid"];
                this.columnedituser = base.Columns["edituser"];
                this.columneditdatecreated = base.Columns["editdatecreated"];
                this.columneditcolumndata = base.Columns["editcolumndata"];
                this.columneditoldvalue = base.Columns["editoldvalue"];
                this.columneditnewvalue = base.Columns["editnewvalue"];
                this.columneditreason = base.Columns["editreason"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columneditno = new global::System.Data.DataColumn("editno", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneditno);
                this.columnedittaskhistid = new global::System.Data.DataColumn("edittaskhistid", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnedittaskhistid);
                this.columnedituser = new global::System.Data.DataColumn("edituser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnedituser);
                this.columneditdatecreated = new global::System.Data.DataColumn("editdatecreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneditdatecreated);
                this.columneditcolumndata = new global::System.Data.DataColumn("editcolumndata", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneditcolumndata);
                this.columneditoldvalue = new global::System.Data.DataColumn("editoldvalue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneditoldvalue);
                this.columneditnewvalue = new global::System.Data.DataColumn("editnewvalue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneditnewvalue);
                this.columneditreason = new global::System.Data.DataColumn("editreason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneditreason);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columneditno,
                                this.columnedittaskhistid}, true));
                this.columneditno.AllowDBNull = false;
                this.columnedittaskhistid.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsRow NewtblslcrecordstaskhistoryeditsRow() {
                return ((tblslcrecordstaskhistoryeditsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblslcrecordstaskhistoryeditsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblslcrecordstaskhistoryeditsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblslcrecordstaskhistoryeditsRowChanged != null)) {
                    this.tblslcrecordstaskhistoryeditsRowChanged(this, new tblslcrecordstaskhistoryeditsRowChangeEvent(((tblslcrecordstaskhistoryeditsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblslcrecordstaskhistoryeditsRowChanging != null)) {
                    this.tblslcrecordstaskhistoryeditsRowChanging(this, new tblslcrecordstaskhistoryeditsRowChangeEvent(((tblslcrecordstaskhistoryeditsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblslcrecordstaskhistoryeditsRowDeleted != null)) {
                    this.tblslcrecordstaskhistoryeditsRowDeleted(this, new tblslcrecordstaskhistoryeditsRowChangeEvent(((tblslcrecordstaskhistoryeditsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblslcrecordstaskhistoryeditsRowDeleting != null)) {
                    this.tblslcrecordstaskhistoryeditsRowDeleting(this, new tblslcrecordstaskhistoryeditsRowChangeEvent(((tblslcrecordstaskhistoryeditsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblslcrecordstaskhistoryeditsRow(tblslcrecordstaskhistoryeditsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SLCDBDataSet ds = new SLCDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblslcrecordstaskhistoryeditsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class getslctopcustomerpendingamountDataTable : global::System.Data.TypedTableBase<getslctopcustomerpendingamountRow> {
            
            private global::System.Data.DataColumn columnslc_customercode;
            
            private global::System.Data.DataColumn columnslc_customerpendingamount;
            
            private global::System.Data.DataColumn columnslc_assignee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getslctopcustomerpendingamountDataTable() {
                this.TableName = "getslctopcustomerpendingamount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal getslctopcustomerpendingamountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected getslctopcustomerpendingamountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_customercodeColumn {
                get {
                    return this.columnslc_customercode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_customerpendingamountColumn {
                get {
                    return this.columnslc_customerpendingamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn slc_assigneeColumn {
                get {
                    return this.columnslc_assignee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getslctopcustomerpendingamountRow this[int index] {
                get {
                    return ((getslctopcustomerpendingamountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event getslctopcustomerpendingamountRowChangeEventHandler getslctopcustomerpendingamountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event getslctopcustomerpendingamountRowChangeEventHandler getslctopcustomerpendingamountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event getslctopcustomerpendingamountRowChangeEventHandler getslctopcustomerpendingamountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event getslctopcustomerpendingamountRowChangeEventHandler getslctopcustomerpendingamountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddgetslctopcustomerpendingamountRow(getslctopcustomerpendingamountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getslctopcustomerpendingamountRow AddgetslctopcustomerpendingamountRow(string slc_customercode, decimal slc_customerpendingamount, string slc_assignee) {
                getslctopcustomerpendingamountRow rowgetslctopcustomerpendingamountRow = ((getslctopcustomerpendingamountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        slc_customercode,
                        slc_customerpendingamount,
                        slc_assignee};
                rowgetslctopcustomerpendingamountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgetslctopcustomerpendingamountRow);
                return rowgetslctopcustomerpendingamountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                getslctopcustomerpendingamountDataTable cln = ((getslctopcustomerpendingamountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new getslctopcustomerpendingamountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnslc_customercode = base.Columns["slc_customercode"];
                this.columnslc_customerpendingamount = base.Columns["slc_customerpendingamount"];
                this.columnslc_assignee = base.Columns["slc_assignee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnslc_customercode = new global::System.Data.DataColumn("slc_customercode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_customercode);
                this.columnslc_customerpendingamount = new global::System.Data.DataColumn("slc_customerpendingamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_customerpendingamount);
                this.columnslc_assignee = new global::System.Data.DataColumn("slc_assignee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslc_assignee);
                this.columnslc_customercode.ReadOnly = true;
                this.columnslc_customercode.MaxLength = 15;
                this.columnslc_customerpendingamount.ReadOnly = true;
                this.columnslc_assignee.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getslctopcustomerpendingamountRow NewgetslctopcustomerpendingamountRow() {
                return ((getslctopcustomerpendingamountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new getslctopcustomerpendingamountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(getslctopcustomerpendingamountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.getslctopcustomerpendingamountRowChanged != null)) {
                    this.getslctopcustomerpendingamountRowChanged(this, new getslctopcustomerpendingamountRowChangeEvent(((getslctopcustomerpendingamountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.getslctopcustomerpendingamountRowChanging != null)) {
                    this.getslctopcustomerpendingamountRowChanging(this, new getslctopcustomerpendingamountRowChangeEvent(((getslctopcustomerpendingamountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.getslctopcustomerpendingamountRowDeleted != null)) {
                    this.getslctopcustomerpendingamountRowDeleted(this, new getslctopcustomerpendingamountRowChangeEvent(((getslctopcustomerpendingamountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.getslctopcustomerpendingamountRowDeleting != null)) {
                    this.getslctopcustomerpendingamountRowDeleting(this, new getslctopcustomerpendingamountRowChangeEvent(((getslctopcustomerpendingamountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovegetslctopcustomerpendingamountRow(getslctopcustomerpendingamountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SLCDBDataSet ds = new SLCDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "getslctopcustomerpendingamountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tbldesignationRow : global::System.Data.DataRow {
            
            private tbldesignationDataTable tabletbldesignation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tbldesignationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbldesignation = ((tbldesignationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long desigid {
                get {
                    return ((long)(this[this.tabletbldesignation.desigidColumn]));
                }
                set {
                    this[this.tabletbldesignation.desigidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string designname {
                get {
                    try {
                        return ((string)(this[this.tabletbldesignation.designnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designname\' in table \'tbldesignation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbldesignation.designnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool designstat {
                get {
                    try {
                        return ((bool)(this[this.tabletbldesignation.designstatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designstat\' in table \'tbldesignation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbldesignation.designstatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdesignnameNull() {
                return this.IsNull(this.tabletbldesignation.designnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdesignnameNull() {
                this[this.tabletbldesignation.designnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdesignstatNull() {
                return this.IsNull(this.tabletbldesignation.designstatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdesignstatNull() {
                this[this.tabletbldesignation.designstatColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblslcrecordsRow : global::System.Data.DataRow {
            
            private tblslcrecordsDataTable tabletblslcrecords;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblslcrecordsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblslcrecords = ((tblslcrecordsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long slc_id {
                get {
                    return ((long)(this[this.tabletblslcrecords.slc_idColumn]));
                }
                set {
                    this[this.tabletblslcrecords.slc_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slc_uploaddate {
                get {
                    return ((global::System.DateTime)(this[this.tabletblslcrecords.slc_uploaddateColumn]));
                }
                set {
                    this[this.tabletblslcrecords.slc_uploaddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_customercode {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecords.slc_customercodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_customercode\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_customercodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_customername {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecords.slc_customernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_customername\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_customernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_salesordercode {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecords.slc_salesordercodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_salesordercode\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_salesordercodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_invoicecode {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecords.slc_invoicecodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_invoicecode\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_invoicecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slc_dispatchdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblslcrecords.slc_dispatchdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_dispatchdate\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_dispatchdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slc_duedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblslcrecords.slc_duedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_duedate\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_duedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal slc_salesamount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblslcrecords.slc_salesamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_salesamount\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_salesamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal slc_recieptamount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblslcrecords.slc_recieptamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_recieptamount\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_recieptamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal slc_returnamount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblslcrecords.slc_returnamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_returnamount\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_returnamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal slc_refundamount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblslcrecords.slc_refundamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_refundamount\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_refundamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal slc_storecreditbalance {
                get {
                    try {
                        return ((decimal)(this[this.tabletblslcrecords.slc_storecreditbalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_storecreditbalance\' in table \'tblslcrecords\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_storecreditbalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal slc_pendingbalance {
                get {
                    try {
                        return ((decimal)(this[this.tabletblslcrecords.slc_pendingbalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_pendingbalance\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_pendingbalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal slc_customerpendingamount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblslcrecords.slc_customerpendingamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_customerpendingamount\' in table \'tblslcrecords\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_customerpendingamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_assignee {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecords.slc_assigneeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_assignee\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_assigneeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_status {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecords.slc_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_status\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_remarks {
                get {
                    if (this.Isslc_remarksNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletblslcrecords.slc_remarksColumn]));
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_remarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_prepby {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecords.slc_prepbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_prepby\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_prepbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool slc_isemailexist {
                get {
                    try {
                        return ((bool)(this[this.tabletblslcrecords.slc_isemailexistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_isemailexist\' in table \'tblslcrecords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_isemailexistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slc_lastdatetimecalled {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblslcrecords.slc_lastdatetimecalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_lastdatetimecalled\' in table \'tblslcrecords\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_lastdatetimecalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slc_lastdatetimeupdated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblslcrecords.slc_lastdatetimeupdatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_lastdatetimeupdated\' in table \'tblslcrecords\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblslcrecords.slc_lastdatetimeupdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_customercodeNull() {
                return this.IsNull(this.tabletblslcrecords.slc_customercodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_customercodeNull() {
                this[this.tabletblslcrecords.slc_customercodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_customernameNull() {
                return this.IsNull(this.tabletblslcrecords.slc_customernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_customernameNull() {
                this[this.tabletblslcrecords.slc_customernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_salesordercodeNull() {
                return this.IsNull(this.tabletblslcrecords.slc_salesordercodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_salesordercodeNull() {
                this[this.tabletblslcrecords.slc_salesordercodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_invoicecodeNull() {
                return this.IsNull(this.tabletblslcrecords.slc_invoicecodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_invoicecodeNull() {
                this[this.tabletblslcrecords.slc_invoicecodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_dispatchdateNull() {
                return this.IsNull(this.tabletblslcrecords.slc_dispatchdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_dispatchdateNull() {
                this[this.tabletblslcrecords.slc_dispatchdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_duedateNull() {
                return this.IsNull(this.tabletblslcrecords.slc_duedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_duedateNull() {
                this[this.tabletblslcrecords.slc_duedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_salesamountNull() {
                return this.IsNull(this.tabletblslcrecords.slc_salesamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_salesamountNull() {
                this[this.tabletblslcrecords.slc_salesamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_recieptamountNull() {
                return this.IsNull(this.tabletblslcrecords.slc_recieptamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_recieptamountNull() {
                this[this.tabletblslcrecords.slc_recieptamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_returnamountNull() {
                return this.IsNull(this.tabletblslcrecords.slc_returnamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_returnamountNull() {
                this[this.tabletblslcrecords.slc_returnamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_refundamountNull() {
                return this.IsNull(this.tabletblslcrecords.slc_refundamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_refundamountNull() {
                this[this.tabletblslcrecords.slc_refundamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_storecreditbalanceNull() {
                return this.IsNull(this.tabletblslcrecords.slc_storecreditbalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_storecreditbalanceNull() {
                this[this.tabletblslcrecords.slc_storecreditbalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_pendingbalanceNull() {
                return this.IsNull(this.tabletblslcrecords.slc_pendingbalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_pendingbalanceNull() {
                this[this.tabletblslcrecords.slc_pendingbalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_customerpendingamountNull() {
                return this.IsNull(this.tabletblslcrecords.slc_customerpendingamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_customerpendingamountNull() {
                this[this.tabletblslcrecords.slc_customerpendingamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_assigneeNull() {
                return this.IsNull(this.tabletblslcrecords.slc_assigneeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_assigneeNull() {
                this[this.tabletblslcrecords.slc_assigneeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_statusNull() {
                return this.IsNull(this.tabletblslcrecords.slc_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_statusNull() {
                this[this.tabletblslcrecords.slc_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_remarksNull() {
                return this.IsNull(this.tabletblslcrecords.slc_remarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_remarksNull() {
                this[this.tabletblslcrecords.slc_remarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_prepbyNull() {
                return this.IsNull(this.tabletblslcrecords.slc_prepbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_prepbyNull() {
                this[this.tabletblslcrecords.slc_prepbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_isemailexistNull() {
                return this.IsNull(this.tabletblslcrecords.slc_isemailexistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_isemailexistNull() {
                this[this.tabletblslcrecords.slc_isemailexistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_lastdatetimecalledNull() {
                return this.IsNull(this.tabletblslcrecords.slc_lastdatetimecalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_lastdatetimecalledNull() {
                this[this.tabletblslcrecords.slc_lastdatetimecalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_lastdatetimeupdatedNull() {
                return this.IsNull(this.tabletblslcrecords.slc_lastdatetimeupdatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_lastdatetimeupdatedNull() {
                this[this.tabletblslcrecords.slc_lastdatetimeupdatedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblslctaskstatusRow : global::System.Data.DataRow {
            
            private tblslctaskstatusDataTable tabletblslctaskstatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblslctaskstatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblslctaskstatus = ((tblslctaskstatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long taskstatid {
                get {
                    return ((long)(this[this.tabletblslctaskstatus.taskstatidColumn]));
                }
                set {
                    this[this.tabletblslctaskstatus.taskstatidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string taskstatname {
                get {
                    try {
                        return ((string)(this[this.tabletblslctaskstatus.taskstatnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'taskstatname\' in table \'tblslctaskstatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslctaskstatus.taskstatnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string taskstataddedby {
                get {
                    try {
                        return ((string)(this[this.tabletblslctaskstatus.taskstataddedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'taskstataddedby\' in table \'tblslctaskstatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslctaskstatus.taskstataddedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime taskstatdateadded {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblslctaskstatus.taskstatdateaddedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'taskstatdateadded\' in table \'tblslctaskstatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslctaskstatus.taskstatdateaddedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool taskstatisactive {
                get {
                    try {
                        return ((bool)(this[this.tabletblslctaskstatus.taskstatisactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'taskstatisactive\' in table \'tblslctaskstatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslctaskstatus.taskstatisactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstaskstatnameNull() {
                return this.IsNull(this.tabletblslctaskstatus.taskstatnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettaskstatnameNull() {
                this[this.tabletblslctaskstatus.taskstatnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstaskstataddedbyNull() {
                return this.IsNull(this.tabletblslctaskstatus.taskstataddedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettaskstataddedbyNull() {
                this[this.tabletblslctaskstatus.taskstataddedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstaskstatdateaddedNull() {
                return this.IsNull(this.tabletblslctaskstatus.taskstatdateaddedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettaskstatdateaddedNull() {
                this[this.tabletblslctaskstatus.taskstatdateaddedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstaskstatisactiveNull() {
                return this.IsNull(this.tabletblslctaskstatus.taskstatisactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettaskstatisactiveNull() {
                this[this.tabletblslctaskstatus.taskstatisactiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tbluserRow : global::System.Data.DataRow {
            
            private tbluserDataTable tabletbluser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tbluserRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbluser = ((tbluserDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long userid {
                get {
                    return ((long)(this[this.tabletbluser.useridColumn]));
                }
                set {
                    this[this.tabletbluser.useridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userzohoid {
                get {
                    try {
                        return ((string)(this[this.tabletbluser.userzohoidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userzohoid\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userzohoidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string useremailadd {
                get {
                    try {
                        return ((string)(this[this.tabletbluser.useremailaddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'useremailadd\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.useremailaddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userpass {
                get {
                    try {
                        return ((string)(this[this.tabletbluser.userpassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userpass\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userpassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userfname {
                get {
                    try {
                        return ((string)(this[this.tabletbluser.userfnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfname\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userfnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userlname {
                get {
                    try {
                        return ((string)(this[this.tabletbluser.userlnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userlname\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userlnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long userdesig {
                get {
                    try {
                        return ((long)(this[this.tabletbluser.userdesigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userdesig\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userdesigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long userreportingto {
                get {
                    try {
                        return ((long)(this[this.tabletbluser.userreportingtoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userreportingto\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userreportingtoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool userisactive {
                get {
                    try {
                        return ((bool)(this[this.tabletbluser.userisactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userisactive\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userisactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool userisloggedin {
                get {
                    try {
                        return ((bool)(this[this.tabletbluser.userisloggedinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userisloggedin\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userisloggedinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan usertotalappuptime {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tabletbluser.usertotalappuptimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'usertotalappuptime\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.usertotalappuptimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long usershift {
                get {
                    try {
                        return ((long)(this[this.tabletbluser.usershiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'usershift\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.usershiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan usertotalhrsrendered {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tabletbluser.usertotalhrsrenderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'usertotalhrsrendered\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.usertotalhrsrenderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool userisadminrole {
                get {
                    try {
                        return ((bool)(this[this.tabletbluser.userisadminroleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userisadminrole\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.userisadminroleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullname {
                get {
                    try {
                        return ((string)(this[this.tabletbluser.fullnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullname\' in table \'tbluser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbluser.fullnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserzohoidNull() {
                return this.IsNull(this.tabletbluser.userzohoidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserzohoidNull() {
                this[this.tabletbluser.userzohoidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuseremailaddNull() {
                return this.IsNull(this.tabletbluser.useremailaddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuseremailaddNull() {
                this[this.tabletbluser.useremailaddColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserpassNull() {
                return this.IsNull(this.tabletbluser.userpassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserpassNull() {
                this[this.tabletbluser.userpassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserfnameNull() {
                return this.IsNull(this.tabletbluser.userfnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserfnameNull() {
                this[this.tabletbluser.userfnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserlnameNull() {
                return this.IsNull(this.tabletbluser.userlnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserlnameNull() {
                this[this.tabletbluser.userlnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserdesigNull() {
                return this.IsNull(this.tabletbluser.userdesigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserdesigNull() {
                this[this.tabletbluser.userdesigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserreportingtoNull() {
                return this.IsNull(this.tabletbluser.userreportingtoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserreportingtoNull() {
                this[this.tabletbluser.userreportingtoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserisactiveNull() {
                return this.IsNull(this.tabletbluser.userisactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserisactiveNull() {
                this[this.tabletbluser.userisactiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserisloggedinNull() {
                return this.IsNull(this.tabletbluser.userisloggedinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserisloggedinNull() {
                this[this.tabletbluser.userisloggedinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsusertotalappuptimeNull() {
                return this.IsNull(this.tabletbluser.usertotalappuptimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetusertotalappuptimeNull() {
                this[this.tabletbluser.usertotalappuptimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsusershiftNull() {
                return this.IsNull(this.tabletbluser.usershiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetusershiftNull() {
                this[this.tabletbluser.usershiftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsusertotalhrsrenderedNull() {
                return this.IsNull(this.tabletbluser.usertotalhrsrenderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetusertotalhrsrenderedNull() {
                this[this.tabletbluser.usertotalhrsrenderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserisadminroleNull() {
                return this.IsNull(this.tabletbluser.userisadminroleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserisadminroleNull() {
                this[this.tabletbluser.userisadminroleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullnameNull() {
                return this.IsNull(this.tabletbluser.fullnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullnameNull() {
                this[this.tabletbluser.fullnameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblslcrecordstaskhistoryRow : global::System.Data.DataRow {
            
            private tblslcrecordstaskhistoryDataTable tabletblslcrecordstaskhistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblslcrecordstaskhistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblslcrecordstaskhistory = ((tblslcrecordstaskhistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long slctaskhistid {
                get {
                    return ((long)(this[this.tabletblslcrecordstaskhistory.slctaskhistidColumn]));
                }
                set {
                    this[this.tabletblslcrecordstaskhistory.slctaskhistidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slctaskhistcustcode {
                get {
                    return ((string)(this[this.tabletblslcrecordstaskhistory.slctaskhistcustcodeColumn]));
                }
                set {
                    this[this.tabletblslcrecordstaskhistory.slctaskhistcustcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slctaskstart {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblslcrecordstaskhistory.slctaskstartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskstart\' in table \'tblslcrecordstaskhistory\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistory.slctaskstartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slctaskend {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblslcrecordstaskhistory.slctaskendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskend\' in table \'tblslcrecordstaskhistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistory.slctaskendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slctaskstatus {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecordstaskhistory.slctaskstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskstatus\' in table \'tblslcrecordstaskhistory\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistory.slctaskstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slctaskremarks {
                get {
                    if (this.IsslctaskremarksNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletblslcrecordstaskhistory.slctaskremarksColumn]));
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistory.slctaskremarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slctaskcalledby {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecordstaskhistory.slctaskcalledbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskcalledby\' in table \'tblslcrecordstaskhistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistory.slctaskcalledbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskstartNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistory.slctaskstartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskstartNull() {
                this[this.tabletblslcrecordstaskhistory.slctaskstartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskendNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistory.slctaskendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskendNull() {
                this[this.tabletblslcrecordstaskhistory.slctaskendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskstatusNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistory.slctaskstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskstatusNull() {
                this[this.tabletblslcrecordstaskhistory.slctaskstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskremarksNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistory.slctaskremarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskremarksNull() {
                this[this.tabletblslcrecordstaskhistory.slctaskremarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskcalledbyNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistory.slctaskcalledbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskcalledbyNull() {
                this[this.tabletblslcrecordstaskhistory.slctaskcalledbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsRow[] GettblslcrecordstaskhistoryeditsRows() {
                if ((this.Table.ChildRelations["tblslcedithistory"] == null)) {
                    return new tblslcrecordstaskhistoryeditsRow[0];
                }
                else {
                    return ((tblslcrecordstaskhistoryeditsRow[])(base.GetChildRows(this.Table.ChildRelations["tblslcedithistory"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class getaskhistoryRow : global::System.Data.DataRow {
            
            private getaskhistoryDataTable tablegetaskhistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal getaskhistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegetaskhistory = ((getaskhistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long slctaskhistid {
                get {
                    return ((long)(this[this.tablegetaskhistory.slctaskhistidColumn]));
                }
                set {
                    this[this.tablegetaskhistory.slctaskhistidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slctaskhistcustcode {
                get {
                    return ((string)(this[this.tablegetaskhistory.slctaskhistcustcodeColumn]));
                }
                set {
                    this[this.tablegetaskhistory.slctaskhistcustcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slctaskstart {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegetaskhistory.slctaskstartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskstart\' in table \'getaskhistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetaskhistory.slctaskstartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime slctaskend {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegetaskhistory.slctaskendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskend\' in table \'getaskhistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetaskhistory.slctaskendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slctaskstatus {
                get {
                    try {
                        return ((string)(this[this.tablegetaskhistory.slctaskstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskstatus\' in table \'getaskhistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetaskhistory.slctaskstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slctaskremarks {
                get {
                    try {
                        return ((string)(this[this.tablegetaskhistory.slctaskremarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskremarks\' in table \'getaskhistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetaskhistory.slctaskremarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slctaskcalledby {
                get {
                    try {
                        return ((string)(this[this.tablegetaskhistory.slctaskcalledbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskcalledby\' in table \'getaskhistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetaskhistory.slctaskcalledbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan slctaskduration {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tablegetaskhistory.slctaskdurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slctaskduration\' in table \'getaskhistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetaskhistory.slctaskdurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskstartNull() {
                return this.IsNull(this.tablegetaskhistory.slctaskstartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskstartNull() {
                this[this.tablegetaskhistory.slctaskstartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskendNull() {
                return this.IsNull(this.tablegetaskhistory.slctaskendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskendNull() {
                this[this.tablegetaskhistory.slctaskendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskstatusNull() {
                return this.IsNull(this.tablegetaskhistory.slctaskstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskstatusNull() {
                this[this.tablegetaskhistory.slctaskstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskremarksNull() {
                return this.IsNull(this.tablegetaskhistory.slctaskremarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskremarksNull() {
                this[this.tablegetaskhistory.slctaskremarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskcalledbyNull() {
                return this.IsNull(this.tablegetaskhistory.slctaskcalledbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskcalledbyNull() {
                this[this.tablegetaskhistory.slctaskcalledbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsslctaskdurationNull() {
                return this.IsNull(this.tablegetaskhistory.slctaskdurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetslctaskdurationNull() {
                this[this.tablegetaskhistory.slctaskdurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsRow[] GettblslcrecordstaskhistoryeditsRows() {
                if ((this.Table.ChildRelations["TASK DATA EDITS"] == null)) {
                    return new tblslcrecordstaskhistoryeditsRow[0];
                }
                else {
                    return ((tblslcrecordstaskhistoryeditsRow[])(base.GetChildRows(this.Table.ChildRelations["TASK DATA EDITS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblslcrecordstaskhistoryeditsRow : global::System.Data.DataRow {
            
            private tblslcrecordstaskhistoryeditsDataTable tabletblslcrecordstaskhistoryedits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblslcrecordstaskhistoryeditsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblslcrecordstaskhistoryedits = ((tblslcrecordstaskhistoryeditsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long editno {
                get {
                    return ((long)(this[this.tabletblslcrecordstaskhistoryedits.editnoColumn]));
                }
                set {
                    this[this.tabletblslcrecordstaskhistoryedits.editnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long edittaskhistid {
                get {
                    return ((long)(this[this.tabletblslcrecordstaskhistoryedits.edittaskhistidColumn]));
                }
                set {
                    this[this.tabletblslcrecordstaskhistoryedits.edittaskhistidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string edituser {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecordstaskhistoryedits.edituserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'edituser\' in table \'tblslcrecordstaskhistoryedits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistoryedits.edituserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime editdatecreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblslcrecordstaskhistoryedits.editdatecreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'editdatecreated\' in table \'tblslcrecordstaskhistoryedits\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistoryedits.editdatecreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string editcolumndata {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecordstaskhistoryedits.editcolumndataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'editcolumndata\' in table \'tblslcrecordstaskhistoryedits\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistoryedits.editcolumndataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string editoldvalue {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecordstaskhistoryedits.editoldvalueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'editoldvalue\' in table \'tblslcrecordstaskhistoryedits\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistoryedits.editoldvalueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string editnewvalue {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecordstaskhistoryedits.editnewvalueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'editnewvalue\' in table \'tblslcrecordstaskhistoryedits\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistoryedits.editnewvalueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string editreason {
                get {
                    try {
                        return ((string)(this[this.tabletblslcrecordstaskhistoryedits.editreasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'editreason\' in table \'tblslcrecordstaskhistoryedits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabletblslcrecordstaskhistoryedits.editreasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryRow tblslcrecordstaskhistoryRow {
                get {
                    return ((tblslcrecordstaskhistoryRow)(this.GetParentRow(this.Table.ParentRelations["tblslcedithistory"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tblslcedithistory"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getaskhistoryRow getaskhistoryRow {
                get {
                    return ((getaskhistoryRow)(this.GetParentRow(this.Table.ParentRelations["TASK DATA EDITS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TASK DATA EDITS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsedituserNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistoryedits.edituserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetedituserNull() {
                this[this.tabletblslcrecordstaskhistoryedits.edituserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IseditdatecreatedNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistoryedits.editdatecreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SeteditdatecreatedNull() {
                this[this.tabletblslcrecordstaskhistoryedits.editdatecreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IseditcolumndataNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistoryedits.editcolumndataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SeteditcolumndataNull() {
                this[this.tabletblslcrecordstaskhistoryedits.editcolumndataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IseditoldvalueNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistoryedits.editoldvalueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SeteditoldvalueNull() {
                this[this.tabletblslcrecordstaskhistoryedits.editoldvalueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IseditnewvalueNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistoryedits.editnewvalueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SeteditnewvalueNull() {
                this[this.tabletblslcrecordstaskhistoryedits.editnewvalueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IseditreasonNull() {
                return this.IsNull(this.tabletblslcrecordstaskhistoryedits.editreasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SeteditreasonNull() {
                this[this.tabletblslcrecordstaskhistoryedits.editreasonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class getslctopcustomerpendingamountRow : global::System.Data.DataRow {
            
            private getslctopcustomerpendingamountDataTable tablegetslctopcustomerpendingamount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal getslctopcustomerpendingamountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegetslctopcustomerpendingamount = ((getslctopcustomerpendingamountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_customercode {
                get {
                    try {
                        return ((string)(this[this.tablegetslctopcustomerpendingamount.slc_customercodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_customercode\' in table \'getslctopcustomerpendingamount\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetslctopcustomerpendingamount.slc_customercodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal slc_customerpendingamount {
                get {
                    try {
                        return ((decimal)(this[this.tablegetslctopcustomerpendingamount.slc_customerpendingamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_customerpendingamount\' in table \'getslctopcustomerpendi" +
                                "ngamount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetslctopcustomerpendingamount.slc_customerpendingamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string slc_assignee {
                get {
                    try {
                        return ((string)(this[this.tablegetslctopcustomerpendingamount.slc_assigneeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slc_assignee\' in table \'getslctopcustomerpendingamount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablegetslctopcustomerpendingamount.slc_assigneeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_customercodeNull() {
                return this.IsNull(this.tablegetslctopcustomerpendingamount.slc_customercodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_customercodeNull() {
                this[this.tablegetslctopcustomerpendingamount.slc_customercodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_customerpendingamountNull() {
                return this.IsNull(this.tablegetslctopcustomerpendingamount.slc_customerpendingamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_customerpendingamountNull() {
                this[this.tablegetslctopcustomerpendingamount.slc_customerpendingamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isslc_assigneeNull() {
                return this.IsNull(this.tablegetslctopcustomerpendingamount.slc_assigneeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setslc_assigneeNull() {
                this[this.tablegetslctopcustomerpendingamount.slc_assigneeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tbldesignationRowChangeEvent : global::System.EventArgs {
            
            private tbldesignationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbldesignationRowChangeEvent(tbldesignationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbldesignationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblslcrecordsRowChangeEvent : global::System.EventArgs {
            
            private tblslcrecordsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordsRowChangeEvent(tblslcrecordsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblslctaskstatusRowChangeEvent : global::System.EventArgs {
            
            private tblslctaskstatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslctaskstatusRowChangeEvent(tblslctaskstatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslctaskstatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tbluserRowChangeEvent : global::System.EventArgs {
            
            private tbluserRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbluserRowChangeEvent(tbluserRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tbluserRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblslcrecordstaskhistoryRowChangeEvent : global::System.EventArgs {
            
            private tblslcrecordstaskhistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryRowChangeEvent(tblslcrecordstaskhistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class getaskhistoryRowChangeEvent : global::System.EventArgs {
            
            private getaskhistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getaskhistoryRowChangeEvent(getaskhistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getaskhistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblslcrecordstaskhistoryeditsRowChangeEvent : global::System.EventArgs {
            
            private tblslcrecordstaskhistoryeditsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsRowChangeEvent(tblslcrecordstaskhistoryeditsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblslcrecordstaskhistoryeditsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class getslctopcustomerpendingamountRowChangeEvent : global::System.EventArgs {
            
            private getslctopcustomerpendingamountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getslctopcustomerpendingamountRowChangeEvent(getslctopcustomerpendingamountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public getslctopcustomerpendingamountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SLC_DE_App.SLCDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbldesignationTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tbldesignationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbldesignation";
            tableMapping.ColumnMappings.Add("desigid", "desigid");
            tableMapping.ColumnMappings.Add("designname", "designname");
            tableMapping.ColumnMappings.Add("designstat", "designstat");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""public"".""tbldesignation"" WHERE ((""desigid"" = :Original_desigid) AND ((:IsNull_designname = 1 AND ""designname"" IS NULL) OR (""designname"" = :Original_designname)) AND ((:IsNull_designstat = 1 AND ""designstat"" IS NULL) OR (""designstat"" = :Original_designstat)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_desigid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "desigid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_designname";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "designname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_designname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "designname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_designstat";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "designstat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_designstat";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "designstat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"public\".\"tbldesignation\" (\"desigid\", \"designname\", \"designstat\") VAL" +
                "UES (:desigid, :designname, :designstat)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "desigid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "desigid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "designname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "designname";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "designstat";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "designstat";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""public"".""tbldesignation"" SET ""desigid"" = :desigid, ""designname"" = :designname, ""designstat"" = :designstat WHERE ((""desigid"" = :Original_desigid) AND ((:IsNull_designname = 1 AND ""designname"" IS NULL) OR (""designname"" = :Original_designname)) AND ((:IsNull_designstat = 1 AND ""designstat"" IS NULL) OR (""designstat"" = :Original_designstat)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "desigid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "desigid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "designname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "designname";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "designstat";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "designstat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_desigid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "desigid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_designname";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "designname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_designname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "designname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_designstat";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "designstat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_designstat";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "designstat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::SLC_DE_App.Properties.Settings.Default.SLCDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT desigid, designname, designstat FROM \"public\".tbldesignation";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SLCDBDataSet.tbldesignationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SLCDBDataSet.tbldesignationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SLCDBDataSet.tbldesignationDataTable dataTable = new SLCDBDataSet.tbldesignationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet.tbldesignationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tbldesignation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_desigid, string Original_designname, bool Original_designstat) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_desigid));
            if ((Original_designname == null)) {
                throw new global::System.ArgumentNullException("Original_designname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_designname));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_designstat));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long desigid, string designname, bool designstat) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(desigid));
            if ((designname == null)) {
                throw new global::System.ArgumentNullException("designname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(designname));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(designstat));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long desigid, string designname, bool designstat, long Original_desigid, string Original_designname, bool Original_designstat) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(desigid));
            if ((designname == null)) {
                throw new global::System.ArgumentNullException("designname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(designname));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(designstat));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Original_desigid));
            if ((Original_designname == null)) {
                throw new global::System.ArgumentNullException("Original_designname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_designname));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(Original_designstat));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string designname, bool designstat, long Original_desigid, string Original_designname, bool Original_designstat) {
            return this.Update(Original_desigid, designname, designstat, Original_desigid, Original_designname, Original_designstat);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblslcrecordsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblslcrecordsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblslcrecords";
            tableMapping.ColumnMappings.Add("slc_id", "slc_id");
            tableMapping.ColumnMappings.Add("slc_uploaddate", "slc_uploaddate");
            tableMapping.ColumnMappings.Add("slc_customercode", "slc_customercode");
            tableMapping.ColumnMappings.Add("slc_customername", "slc_customername");
            tableMapping.ColumnMappings.Add("slc_salesordercode", "slc_salesordercode");
            tableMapping.ColumnMappings.Add("slc_invoicecode", "slc_invoicecode");
            tableMapping.ColumnMappings.Add("slc_dispatchdate", "slc_dispatchdate");
            tableMapping.ColumnMappings.Add("slc_duedate", "slc_duedate");
            tableMapping.ColumnMappings.Add("slc_salesamount", "slc_salesamount");
            tableMapping.ColumnMappings.Add("slc_recieptamount", "slc_recieptamount");
            tableMapping.ColumnMappings.Add("slc_returnamount", "slc_returnamount");
            tableMapping.ColumnMappings.Add("slc_refundamount", "slc_refundamount");
            tableMapping.ColumnMappings.Add("slc_storecreditbalance", "slc_storecreditbalance");
            tableMapping.ColumnMappings.Add("slc_pendingbalance", "slc_pendingbalance");
            tableMapping.ColumnMappings.Add("slc_customerpendingamount", "slc_customerpendingamount");
            tableMapping.ColumnMappings.Add("slc_assignee", "slc_assignee");
            tableMapping.ColumnMappings.Add("slc_status", "slc_status");
            tableMapping.ColumnMappings.Add("slc_remarks", "slc_remarks");
            tableMapping.ColumnMappings.Add("slc_prepby", "slc_prepby");
            tableMapping.ColumnMappings.Add("slc_isemailexist", "slc_isemailexist");
            tableMapping.ColumnMappings.Add("slc_lastdatetimecalled", "slc_lastdatetimecalled");
            tableMapping.ColumnMappings.Add("slc_lastdatetimeupdated", "slc_lastdatetimeupdated");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"public\".\"tblslcrecords\" WHERE ((\"slc_id\" = :Original_slc_id) AND (\"s" +
                "lc_uploaddate\" = :Original_slc_uploaddate) AND ((:IsNull_slc_customercode = 1 AN" +
                "D \"slc_customercode\" IS NULL) OR (\"slc_customercode\" = :Original_slc_customercod" +
                "e)) AND ((:IsNull_slc_customername = 1 AND \"slc_customername\" IS NULL) OR (\"slc_" +
                "customername\" = :Original_slc_customername)) AND ((:IsNull_slc_salesordercode = " +
                "1 AND \"slc_salesordercode\" IS NULL) OR (\"slc_salesordercode\" = :Original_slc_sal" +
                "esordercode)) AND ((:IsNull_slc_invoicecode = 1 AND \"slc_invoicecode\" IS NULL) O" +
                "R (\"slc_invoicecode\" = :Original_slc_invoicecode)) AND ((:IsNull_slc_dispatchdat" +
                "e = 1 AND \"slc_dispatchdate\" IS NULL) OR (\"slc_dispatchdate\" = :Original_slc_dis" +
                "patchdate)) AND ((:IsNull_slc_duedate = 1 AND \"slc_duedate\" IS NULL) OR (\"slc_du" +
                "edate\" = :Original_slc_duedate)) AND ((:IsNull_slc_salesamount = 1 AND \"slc_sale" +
                "samount\" IS NULL) OR (\"slc_salesamount\" = :Original_slc_salesamount)) AND ((:IsN" +
                "ull_slc_recieptamount = 1 AND \"slc_recieptamount\" IS NULL) OR (\"slc_recieptamoun" +
                "t\" = :Original_slc_recieptamount)) AND ((:IsNull_slc_returnamount = 1 AND \"slc_r" +
                "eturnamount\" IS NULL) OR (\"slc_returnamount\" = :Original_slc_returnamount)) AND " +
                "((:IsNull_slc_refundamount = 1 AND \"slc_refundamount\" IS NULL) OR (\"slc_refundam" +
                "ount\" = :Original_slc_refundamount)) AND ((:IsNull_slc_storecreditbalance = 1 AN" +
                "D \"slc_storecreditbalance\" IS NULL) OR (\"slc_storecreditbalance\" = :Original_slc" +
                "_storecreditbalance)) AND ((:IsNull_slc_pendingbalance = 1 AND \"slc_pendingbalan" +
                "ce\" IS NULL) OR (\"slc_pendingbalance\" = :Original_slc_pendingbalance)) AND ((:Is" +
                "Null_slc_customerpendingamount = 1 AND \"slc_customerpendingamount\" IS NULL) OR (" +
                "\"slc_customerpendingamount\" = :Original_slc_customerpendingamount)) AND ((:IsNul" +
                "l_slc_isemailexist = 1 AND \"slc_isemailexist\" IS NULL) OR (\"slc_isemailexist\" = " +
                ":Original_slc_isemailexist)) AND ((:IsNull_slc_status = 1 AND \"slc_status\" IS NU" +
                "LL) OR (\"slc_status\" = :Original_slc_status)) AND ((:IsNull_slc_remarks = 1 AND " +
                "\"slc_remarks\" IS NULL) OR (\"slc_remarks\" = :Original_slc_remarks)) AND ((:IsNull" +
                "_slc_assignee = 1 AND \"slc_assignee\" IS NULL) OR (\"slc_assignee\" = :Original_slc" +
                "_assignee)) AND ((:IsNull_slc_prepby = 1 AND \"slc_prepby\" IS NULL) OR (\"slc_prep" +
                "by\" = :Original_slc_prepby)) AND ((:IsNull_slc_lastdatetimecalled = 1 AND \"slc_l" +
                "astdatetimecalled\" IS NULL) OR (\"slc_lastdatetimecalled\" = :Original_slc_lastdat" +
                "etimecalled)) AND ((:IsNull_slc_lastdatetimeupdated = 1 AND \"slc_lastdatetimeupd" +
                "ated\" IS NULL) OR (\"slc_lastdatetimeupdated\" = :Original_slc_lastdatetimeupdated" +
                ")))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "slc_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_uploaddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_uploaddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_customercode";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_customercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_customername";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_customername";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_customername";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_customername";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_salesordercode";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesordercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_salesordercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesordercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_invoicecode";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_invoicecode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_invoicecode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_invoicecode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_dispatchdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_dispatchdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_dispatchdate";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "slc_dispatchdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_duedate";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_duedate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_duedate";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "slc_duedate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_salesamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_salesamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_recieptamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_recieptamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_recieptamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_recieptamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_returnamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_returnamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_returnamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_returnamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_refundamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_refundamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_refundamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_refundamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_storecreditbalance";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_storecreditbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_storecreditbalance";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_storecreditbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_pendingbalance";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_pendingbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_pendingbalance";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_pendingbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_customerpendingamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_customerpendingamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_customerpendingamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_customerpendingamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_isemailexist";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_isemailexist";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_isemailexist";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "slc_isemailexist";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_status";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_status";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_remarks";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_remarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_remarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_remarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_assignee";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_assignee";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_assignee";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_assignee";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_prepby";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_prepby";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_prepby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_prepby";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_lastdatetimecalled";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimecalled";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_lastdatetimecalled";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimecalled";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_lastdatetimeupdated";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimeupdated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_lastdatetimeupdated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimeupdated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""public"".""tblslcrecords"" (""slc_id"", ""slc_uploaddate"", ""slc_customercode"", ""slc_customername"", ""slc_salesordercode"", ""slc_invoicecode"", ""slc_dispatchdate"", ""slc_duedate"", ""slc_salesamount"", ""slc_recieptamount"", ""slc_returnamount"", ""slc_refundamount"", ""slc_storecreditbalance"", ""slc_pendingbalance"", ""slc_customerpendingamount"", ""slc_assignee"", ""slc_status"", ""slc_remarks"", ""slc_prepby"", ""slc_isemailexist"", ""slc_lastdatetimecalled"") VALUES (:slc_id, :slc_uploaddate, :slc_customercode, :slc_customername, :slc_salesordercode, :slc_invoicecode, :slc_dispatchdate, :slc_duedate, :slc_salesamount, :slc_recieptamount, :slc_returnamount, :slc_refundamount, :slc_storecreditbalance, :slc_pendingbalance, :slc_customerpendingamount, :slc_assignee, :slc_status, :slc_remarks, :slc_prepby, :slc_isemailexist, :slc_lastdatetimecalled)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "slc_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_uploaddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_uploaddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_customercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_customername";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_customername";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_salesordercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesordercode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_invoicecode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_invoicecode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_dispatchdate";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "slc_dispatchdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_duedate";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "slc_duedate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_salesamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesamount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_recieptamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_recieptamount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_returnamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_returnamount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_refundamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_refundamount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_storecreditbalance";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_storecreditbalance";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_pendingbalance";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_pendingbalance";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_customerpendingamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_customerpendingamount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_assignee";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_assignee";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_status";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_status";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_remarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_remarks";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_prepby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_prepby";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_isemailexist";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "slc_isemailexist";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_lastdatetimecalled";
            param.DbType = global::System.Data.DbType.DateTimeOffset;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStampTZ;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimecalled";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"public\".\"tblslcrecords\" SET \"slc_id\" = :slc_id, \"slc_uploaddate\" = :slc_u" +
                "ploaddate, \"slc_customercode\" = :slc_customercode, \"slc_customername\" = :slc_cus" +
                "tomername, \"slc_salesordercode\" = :slc_salesordercode, \"slc_invoicecode\" = :slc_" +
                "invoicecode, \"slc_dispatchdate\" = :slc_dispatchdate, \"slc_duedate\" = :slc_duedat" +
                "e, \"slc_salesamount\" = :slc_salesamount, \"slc_recieptamount\" = :slc_recieptamoun" +
                "t, \"slc_returnamount\" = :slc_returnamount, \"slc_refundamount\" = :slc_refundamoun" +
                "t, \"slc_storecreditbalance\" = :slc_storecreditbalance, \"slc_pendingbalance\" = :s" +
                "lc_pendingbalance, \"slc_customerpendingamount\" = :slc_customerpendingamount, \"sl" +
                "c_isemailexist\" = :slc_isemailexist, \"slc_status\" = :slc_status, \"slc_remarks\" =" +
                " :slc_remarks, \"slc_assignee\" = :slc_assignee, \"slc_prepby\" = :slc_prepby, \"slc_" +
                "lastdatetimecalled\" = :slc_lastdatetimecalled, \"slc_lastdatetimeupdated\" = :slc_" +
                "lastdatetimeupdated WHERE ((\"slc_id\" = :Original_slc_id) AND (\"slc_uploaddate\" =" +
                " :Original_slc_uploaddate) AND ((:IsNull_slc_customercode = 1 AND \"slc_customerc" +
                "ode\" IS NULL) OR (\"slc_customercode\" = :Original_slc_customercode)) AND ((:IsNul" +
                "l_slc_customername = 1 AND \"slc_customername\" IS NULL) OR (\"slc_customername\" = " +
                ":Original_slc_customername)) AND ((:IsNull_slc_salesordercode = 1 AND \"slc_sales" +
                "ordercode\" IS NULL) OR (\"slc_salesordercode\" = :Original_slc_salesordercode)) AN" +
                "D ((:IsNull_slc_invoicecode = 1 AND \"slc_invoicecode\" IS NULL) OR (\"slc_invoicec" +
                "ode\" = :Original_slc_invoicecode)) AND ((:IsNull_slc_dispatchdate = 1 AND \"slc_d" +
                "ispatchdate\" IS NULL) OR (\"slc_dispatchdate\" = :Original_slc_dispatchdate)) AND " +
                "((:IsNull_slc_duedate = 1 AND \"slc_duedate\" IS NULL) OR (\"slc_duedate\" = :Origin" +
                "al_slc_duedate)) AND ((:IsNull_slc_salesamount = 1 AND \"slc_salesamount\" IS NULL" +
                ") OR (\"slc_salesamount\" = :Original_slc_salesamount)) AND ((:IsNull_slc_reciepta" +
                "mount = 1 AND \"slc_recieptamount\" IS NULL) OR (\"slc_recieptamount\" = :Original_s" +
                "lc_recieptamount)) AND ((:IsNull_slc_returnamount = 1 AND \"slc_returnamount\" IS " +
                "NULL) OR (\"slc_returnamount\" = :Original_slc_returnamount)) AND ((:IsNull_slc_re" +
                "fundamount = 1 AND \"slc_refundamount\" IS NULL) OR (\"slc_refundamount\" = :Origina" +
                "l_slc_refundamount)) AND ((:IsNull_slc_storecreditbalance = 1 AND \"slc_storecred" +
                "itbalance\" IS NULL) OR (\"slc_storecreditbalance\" = :Original_slc_storecreditbala" +
                "nce)) AND ((:IsNull_slc_pendingbalance = 1 AND \"slc_pendingbalance\" IS NULL) OR " +
                "(\"slc_pendingbalance\" = :Original_slc_pendingbalance)) AND ((:IsNull_slc_custome" +
                "rpendingamount = 1 AND \"slc_customerpendingamount\" IS NULL) OR (\"slc_customerpen" +
                "dingamount\" = :Original_slc_customerpendingamount)) AND ((:IsNull_slc_isemailexi" +
                "st = 1 AND \"slc_isemailexist\" IS NULL) OR (\"slc_isemailexist\" = :Original_slc_is" +
                "emailexist)) AND ((:IsNull_slc_status = 1 AND \"slc_status\" IS NULL) OR (\"slc_sta" +
                "tus\" = :Original_slc_status)) AND ((:IsNull_slc_remarks = 1 AND \"slc_remarks\" IS" +
                " NULL) OR (\"slc_remarks\" = :Original_slc_remarks)) AND ((:IsNull_slc_assignee = " +
                "1 AND \"slc_assignee\" IS NULL) OR (\"slc_assignee\" = :Original_slc_assignee)) AND " +
                "((:IsNull_slc_prepby = 1 AND \"slc_prepby\" IS NULL) OR (\"slc_prepby\" = :Original_" +
                "slc_prepby)) AND ((:IsNull_slc_lastdatetimecalled = 1 AND \"slc_lastdatetimecalle" +
                "d\" IS NULL) OR (\"slc_lastdatetimecalled\" = :Original_slc_lastdatetimecalled)) AN" +
                "D ((:IsNull_slc_lastdatetimeupdated = 1 AND \"slc_lastdatetimeupdated\" IS NULL) O" +
                "R (\"slc_lastdatetimeupdated\" = :Original_slc_lastdatetimeupdated)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "slc_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_uploaddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_uploaddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_customercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_customername";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_customername";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_salesordercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesordercode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_invoicecode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_invoicecode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_dispatchdate";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "slc_dispatchdate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_duedate";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "slc_duedate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_salesamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesamount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_recieptamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_recieptamount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_returnamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_returnamount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_refundamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_refundamount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_storecreditbalance";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_storecreditbalance";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_pendingbalance";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_pendingbalance";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_customerpendingamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_customerpendingamount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_isemailexist";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "slc_isemailexist";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_status";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_status";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_remarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_remarks";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_assignee";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_assignee";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_prepby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_prepby";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_lastdatetimecalled";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimecalled";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_lastdatetimeupdated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimeupdated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "slc_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_uploaddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_uploaddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_customercode";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_customercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_customername";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_customername";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_customername";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_customername";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_salesordercode";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesordercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_salesordercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesordercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_invoicecode";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_invoicecode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_invoicecode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_invoicecode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_dispatchdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_dispatchdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_dispatchdate";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "slc_dispatchdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_duedate";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_duedate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_duedate";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "slc_duedate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_salesamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_salesamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_salesamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_recieptamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_recieptamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_recieptamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_recieptamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_returnamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_returnamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_returnamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_returnamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_refundamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_refundamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_refundamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_refundamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_storecreditbalance";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_storecreditbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_storecreditbalance";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_storecreditbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_pendingbalance";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_pendingbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_pendingbalance";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_pendingbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_customerpendingamount";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_customerpendingamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_customerpendingamount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "slc_customerpendingamount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_isemailexist";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_isemailexist";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_isemailexist";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "slc_isemailexist";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_status";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_status";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_remarks";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_remarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_remarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_remarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_assignee";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_assignee";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_assignee";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_assignee";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_prepby";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_prepby";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_prepby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slc_prepby";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_lastdatetimecalled";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimecalled";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_lastdatetimecalled";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimecalled";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slc_lastdatetimeupdated";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimeupdated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_lastdatetimeupdated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimeupdated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::SLC_DE_App.Properties.Settings.Default.SLCDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[6];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        slc_id, slc_uploaddate, slc_customercode, slc_customername, slc_salesordercode, slc_invoicecode, slc_dispatchdate, slc_duedate, slc_salesamount, slc_recieptamount, slc_returnamount, slc_refundamount, 
                         slc_storecreditbalance, slc_pendingbalance, slc_customerpendingamount, slc_isemailexist, slc_status, slc_remarks, slc_assignee, slc_prepby, slc_lastdatetimecalled, slc_lastdatetimeupdated
FROM            tblslcrecords
ORDER BY slc_id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT slc_assignee, slc_customercode, slc_customername, slc_customerpendingamount, slc_dispatchdate, slc_duedate, slc_id, slc_invoicecode, slc_isemailexist, slc_lastdatetimecalled, slc_lastdatetimeupdated, slc_pendingbalance, slc_prepby, slc_recieptamount, slc_refundamount, slc_remarks, slc_returnamount, slc_salesamount, slc_salesordercode, slc_status, slc_storecreditbalance, slc_uploaddate FROM tblslcrecords WHERE (slc_customercode = :slc_customercode)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_customercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT MAX(slc_id) FROM tblslcrecords";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"UPDATE ""public"".""tblslcrecords"" SET ""slc_status"" = :slc_status, ""slc_remarks"" = :slc_remarks, ""slc_prepby"" = :slc_prepby, ""slc_lastdatetimecalled"" = :slc_lastdatetimecalled, ""slc_lastdatetimeupdated"" = :slc_lastdatetimeupdated WHERE ""slc_customercode"" = :Original_slc_customercode";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_status";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "slc_status";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_remarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "slc_remarks";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_prepby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "slc_prepby";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_lastdatetimecalled";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimecalled";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_lastdatetimeupdated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slc_lastdatetimeupdated";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slc_customercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[3].Parameters.Add(param);
            this._commandCollection[4] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE  tblslcrecords SET slc_assignee = :slc_assignee WHERE slc_customercode =:c" +
                "ustomercode";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_assignee";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "slc_assignee";
            this._commandCollection[4].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "customercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[4].Parameters.Add(param);
            this._commandCollection[5] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "UPDATE tblslcrecords \r\nSET  slc_status=:slc_status, slc_remarks=:slc_remarks \r\nWH" +
                "ERE slc_customercode=:slc_customercode";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_status";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "slc_status";
            this._commandCollection[5].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_remarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "slc_remarks";
            this._commandCollection[5].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slc_customercode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "slc_customercode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[5].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SLCDBDataSet.tblslcrecordsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SLCDBDataSet.tblslcrecordsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SLCDBDataSet.tblslcrecordsDataTable dataTable = new SLCDBDataSet.tblslcrecordsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CustomerCode(SLCDBDataSet.tblslcrecordsDataTable dataTable, string slc_customercode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((slc_customercode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(slc_customercode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SLCDBDataSet.tblslcrecordsDataTable GetDataBy_CustomerCode(string slc_customercode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((slc_customercode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(slc_customercode));
            }
            SLCDBDataSet.tblslcrecordsDataTable dataTable = new SLCDBDataSet.tblslcrecordsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet.tblslcrecordsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblslcrecords");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_slc_id, 
                    System.DateTime Original_slc_uploaddate, 
                    string Original_slc_customercode, 
                    string Original_slc_customername, 
                    string Original_slc_salesordercode, 
                    string Original_slc_invoicecode, 
                    System.DateTime Original_slc_dispatchdate, 
                    System.DateTime Original_slc_duedate, 
                    decimal Original_slc_salesamount, 
                    decimal Original_slc_recieptamount, 
                    decimal Original_slc_returnamount, 
                    decimal Original_slc_refundamount, 
                    decimal Original_slc_storecreditbalance, 
                    decimal Original_slc_pendingbalance, 
                    decimal Original_slc_customerpendingamount, 
                    bool Original_slc_isemailexist, 
                    string Original_slc_status, 
                    string Original_slc_remarks, 
                    string Original_slc_assignee, 
                    string Original_slc_prepby, 
                    System.DateTime Original_slc_lastdatetimecalled, 
                    System.DateTime Original_slc_lastdatetimeupdated) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_slc_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_slc_uploaddate));
            if ((Original_slc_customercode == null)) {
                throw new global::System.ArgumentNullException("Original_slc_customercode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_slc_customercode));
            }
            if ((Original_slc_customername == null)) {
                throw new global::System.ArgumentNullException("Original_slc_customername");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_slc_customername));
            }
            if ((Original_slc_salesordercode == null)) {
                throw new global::System.ArgumentNullException("Original_slc_salesordercode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_slc_salesordercode));
            }
            if ((Original_slc_invoicecode == null)) {
                throw new global::System.ArgumentNullException("Original_slc_invoicecode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_slc_invoicecode));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_slc_dispatchdate));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_slc_duedate));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_slc_salesamount));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_slc_recieptamount));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_slc_returnamount));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_slc_refundamount));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_slc_storecreditbalance));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_slc_pendingbalance));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_slc_customerpendingamount));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_slc_isemailexist));
            if ((Original_slc_status == null)) {
                throw new global::System.ArgumentNullException("Original_slc_status");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_slc_status));
            }
            if ((Original_slc_remarks == null)) {
                throw new global::System.ArgumentNullException("Original_slc_remarks");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_slc_remarks));
            }
            if ((Original_slc_assignee == null)) {
                throw new global::System.ArgumentNullException("Original_slc_assignee");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_slc_assignee));
            }
            if ((Original_slc_prepby == null)) {
                throw new global::System.ArgumentNullException("Original_slc_prepby");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_slc_prepby));
            }
            this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((System.DateTime)(Original_slc_lastdatetimecalled));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((System.DateTime)(Original_slc_lastdatetimeupdated));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long slc_id, 
                    System.DateTime slc_uploaddate, 
                    string slc_customercode, 
                    string slc_customername, 
                    string slc_salesordercode, 
                    string slc_invoicecode, 
                    System.DateTime slc_dispatchdate, 
                    System.DateTime slc_duedate, 
                    decimal slc_salesamount, 
                    decimal slc_recieptamount, 
                    decimal slc_returnamount, 
                    decimal slc_refundamount, 
                    decimal slc_storecreditbalance, 
                    decimal slc_pendingbalance, 
                    decimal slc_customerpendingamount, 
                    string slc_assignee, 
                    string slc_status, 
                    string slc_remarks, 
                    string slc_prepby, 
                    bool slc_isemailexist, 
                    System.DateTimeOffset slc_lastdatetimecalled) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(slc_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(slc_uploaddate));
            if ((slc_customercode == null)) {
                throw new global::System.ArgumentNullException("slc_customercode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(slc_customercode));
            }
            if ((slc_customername == null)) {
                throw new global::System.ArgumentNullException("slc_customername");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(slc_customername));
            }
            if ((slc_salesordercode == null)) {
                throw new global::System.ArgumentNullException("slc_salesordercode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(slc_salesordercode));
            }
            if ((slc_invoicecode == null)) {
                throw new global::System.ArgumentNullException("slc_invoicecode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(slc_invoicecode));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(slc_dispatchdate));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(slc_duedate));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(slc_salesamount));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(slc_recieptamount));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(slc_returnamount));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(slc_refundamount));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(slc_storecreditbalance));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(slc_pendingbalance));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(slc_customerpendingamount));
            if ((slc_assignee == null)) {
                throw new global::System.ArgumentNullException("slc_assignee");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(slc_assignee));
            }
            if ((slc_status == null)) {
                throw new global::System.ArgumentNullException("slc_status");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(slc_status));
            }
            if ((slc_remarks == null)) {
                throw new global::System.ArgumentNullException("slc_remarks");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(slc_remarks));
            }
            if ((slc_prepby == null)) {
                throw new global::System.ArgumentNullException("slc_prepby");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(slc_prepby));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(slc_isemailexist));
            this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTimeOffset)(slc_lastdatetimecalled));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long slc_id, 
                    System.DateTime slc_uploaddate, 
                    string slc_customercode, 
                    string slc_customername, 
                    string slc_salesordercode, 
                    string slc_invoicecode, 
                    System.DateTime slc_dispatchdate, 
                    System.DateTime slc_duedate, 
                    decimal slc_salesamount, 
                    decimal slc_recieptamount, 
                    decimal slc_returnamount, 
                    decimal slc_refundamount, 
                    decimal slc_storecreditbalance, 
                    decimal slc_pendingbalance, 
                    decimal slc_customerpendingamount, 
                    bool slc_isemailexist, 
                    string slc_status, 
                    string slc_remarks, 
                    string slc_assignee, 
                    string slc_prepby, 
                    System.DateTime slc_lastdatetimecalled, 
                    System.DateTime slc_lastdatetimeupdated, 
                    long Original_slc_id, 
                    System.DateTime Original_slc_uploaddate, 
                    string Original_slc_customercode, 
                    string Original_slc_customername, 
                    string Original_slc_salesordercode, 
                    string Original_slc_invoicecode, 
                    System.DateTime Original_slc_dispatchdate, 
                    System.DateTime Original_slc_duedate, 
                    decimal Original_slc_salesamount, 
                    decimal Original_slc_recieptamount, 
                    decimal Original_slc_returnamount, 
                    decimal Original_slc_refundamount, 
                    decimal Original_slc_storecreditbalance, 
                    decimal Original_slc_pendingbalance, 
                    decimal Original_slc_customerpendingamount, 
                    bool Original_slc_isemailexist, 
                    string Original_slc_status, 
                    string Original_slc_remarks, 
                    string Original_slc_assignee, 
                    string Original_slc_prepby, 
                    System.DateTime Original_slc_lastdatetimecalled, 
                    System.DateTime Original_slc_lastdatetimeupdated) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(slc_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(slc_uploaddate));
            if ((slc_customercode == null)) {
                throw new global::System.ArgumentNullException("slc_customercode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(slc_customercode));
            }
            if ((slc_customername == null)) {
                throw new global::System.ArgumentNullException("slc_customername");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(slc_customername));
            }
            if ((slc_salesordercode == null)) {
                throw new global::System.ArgumentNullException("slc_salesordercode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(slc_salesordercode));
            }
            if ((slc_invoicecode == null)) {
                throw new global::System.ArgumentNullException("slc_invoicecode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(slc_invoicecode));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(slc_dispatchdate));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(slc_duedate));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(slc_salesamount));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(slc_recieptamount));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(slc_returnamount));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(slc_refundamount));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(slc_storecreditbalance));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(slc_pendingbalance));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(slc_customerpendingamount));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(slc_isemailexist));
            if ((slc_status == null)) {
                throw new global::System.ArgumentNullException("slc_status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(slc_status));
            }
            if ((slc_remarks == null)) {
                throw new global::System.ArgumentNullException("slc_remarks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(slc_remarks));
            }
            if ((slc_assignee == null)) {
                throw new global::System.ArgumentNullException("slc_assignee");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(slc_assignee));
            }
            if ((slc_prepby == null)) {
                throw new global::System.ArgumentNullException("slc_prepby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(slc_prepby));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(slc_lastdatetimecalled));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(slc_lastdatetimeupdated));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(Original_slc_id));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_slc_uploaddate));
            if ((Original_slc_customercode == null)) {
                throw new global::System.ArgumentNullException("Original_slc_customercode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_slc_customercode));
            }
            if ((Original_slc_customername == null)) {
                throw new global::System.ArgumentNullException("Original_slc_customername");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_slc_customername));
            }
            if ((Original_slc_salesordercode == null)) {
                throw new global::System.ArgumentNullException("Original_slc_salesordercode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_slc_salesordercode));
            }
            if ((Original_slc_invoicecode == null)) {
                throw new global::System.ArgumentNullException("Original_slc_invoicecode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_slc_invoicecode));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_slc_dispatchdate));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_slc_duedate));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Original_slc_salesamount));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_slc_recieptamount));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_slc_returnamount));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_slc_refundamount));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_slc_storecreditbalance));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_slc_pendingbalance));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(Original_slc_customerpendingamount));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_slc_isemailexist));
            if ((Original_slc_status == null)) {
                throw new global::System.ArgumentNullException("Original_slc_status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_slc_status));
            }
            if ((Original_slc_remarks == null)) {
                throw new global::System.ArgumentNullException("Original_slc_remarks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_slc_remarks));
            }
            if ((Original_slc_assignee == null)) {
                throw new global::System.ArgumentNullException("Original_slc_assignee");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_slc_assignee));
            }
            if ((Original_slc_prepby == null)) {
                throw new global::System.ArgumentNullException("Original_slc_prepby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_slc_prepby));
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_slc_lastdatetimecalled));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((System.DateTime)(Original_slc_lastdatetimeupdated));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime slc_uploaddate, 
                    string slc_customercode, 
                    string slc_customername, 
                    string slc_salesordercode, 
                    string slc_invoicecode, 
                    System.DateTime slc_dispatchdate, 
                    System.DateTime slc_duedate, 
                    decimal slc_salesamount, 
                    decimal slc_recieptamount, 
                    decimal slc_returnamount, 
                    decimal slc_refundamount, 
                    decimal slc_storecreditbalance, 
                    decimal slc_pendingbalance, 
                    decimal slc_customerpendingamount, 
                    bool slc_isemailexist, 
                    string slc_status, 
                    string slc_remarks, 
                    string slc_assignee, 
                    string slc_prepby, 
                    System.DateTime slc_lastdatetimecalled, 
                    System.DateTime slc_lastdatetimeupdated, 
                    long Original_slc_id, 
                    System.DateTime Original_slc_uploaddate, 
                    string Original_slc_customercode, 
                    string Original_slc_customername, 
                    string Original_slc_salesordercode, 
                    string Original_slc_invoicecode, 
                    System.DateTime Original_slc_dispatchdate, 
                    System.DateTime Original_slc_duedate, 
                    decimal Original_slc_salesamount, 
                    decimal Original_slc_recieptamount, 
                    decimal Original_slc_returnamount, 
                    decimal Original_slc_refundamount, 
                    decimal Original_slc_storecreditbalance, 
                    decimal Original_slc_pendingbalance, 
                    decimal Original_slc_customerpendingamount, 
                    bool Original_slc_isemailexist, 
                    string Original_slc_status, 
                    string Original_slc_remarks, 
                    string Original_slc_assignee, 
                    string Original_slc_prepby, 
                    System.DateTime Original_slc_lastdatetimecalled, 
                    System.DateTime Original_slc_lastdatetimeupdated) {
            return this.Update(Original_slc_id, slc_uploaddate, slc_customercode, slc_customername, slc_salesordercode, slc_invoicecode, slc_dispatchdate, slc_duedate, slc_salesamount, slc_recieptamount, slc_returnamount, slc_refundamount, slc_storecreditbalance, slc_pendingbalance, slc_customerpendingamount, slc_isemailexist, slc_status, slc_remarks, slc_assignee, slc_prepby, slc_lastdatetimecalled, slc_lastdatetimeupdated, Original_slc_id, Original_slc_uploaddate, Original_slc_customercode, Original_slc_customername, Original_slc_salesordercode, Original_slc_invoicecode, Original_slc_dispatchdate, Original_slc_duedate, Original_slc_salesamount, Original_slc_recieptamount, Original_slc_returnamount, Original_slc_refundamount, Original_slc_storecreditbalance, Original_slc_pendingbalance, Original_slc_customerpendingamount, Original_slc_isemailexist, Original_slc_status, Original_slc_remarks, Original_slc_assignee, Original_slc_prepby, Original_slc_lastdatetimecalled, Original_slc_lastdatetimeupdated);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<long> ScalarQuery_MaxSLCID() {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[2];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<long>();
            }
            else {
                return new global::System.Nullable<long>(((long)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery_TaskUpdate(string slc_status, string slc_remarks, string slc_prepby, global::System.Nullable<global::System.DateTime> slc_lastdatetimecalled, global::System.Nullable<global::System.DateTime> slc_lastdatetimeupdated, string Original_slc_customercode) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[3];
            if ((slc_status == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(slc_status));
            }
            if ((slc_remarks == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(slc_remarks));
            }
            if ((slc_prepby == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(slc_prepby));
            }
            if ((slc_lastdatetimecalled.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(slc_lastdatetimecalled.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((slc_lastdatetimeupdated.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(slc_lastdatetimeupdated.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_slc_customercode == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Original_slc_customercode));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery_UpdateAssignee(string slc_assignee, string customercode) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[4];
            if ((slc_assignee == null)) {
                throw new global::System.ArgumentNullException("slc_assignee");
            }
            else {
                command.Parameters[0].Value = ((string)(slc_assignee));
            }
            if ((customercode == null)) {
                throw new global::System.ArgumentNullException("customercode");
            }
            else {
                command.Parameters[1].Value = ((string)(customercode));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery_UpdateStatusRemarks(string slc_status, string slc_remarks, string slc_customercode) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[5];
            if ((slc_status == null)) {
                throw new global::System.ArgumentNullException("slc_status");
            }
            else {
                command.Parameters[0].Value = ((string)(slc_status));
            }
            if ((slc_remarks == null)) {
                throw new global::System.ArgumentNullException("slc_remarks");
            }
            else {
                command.Parameters[1].Value = ((string)(slc_remarks));
            }
            if ((slc_customercode == null)) {
                throw new global::System.ArgumentNullException("slc_customercode");
            }
            else {
                command.Parameters[2].Value = ((string)(slc_customercode));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblslctaskstatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblslctaskstatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblslctaskstatus";
            tableMapping.ColumnMappings.Add("taskstatid", "taskstatid");
            tableMapping.ColumnMappings.Add("taskstatname", "taskstatname");
            tableMapping.ColumnMappings.Add("taskstataddedby", "taskstataddedby");
            tableMapping.ColumnMappings.Add("taskstatdateadded", "taskstatdateadded");
            tableMapping.ColumnMappings.Add("taskstatisactive", "taskstatisactive");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"public\".\"tblslctaskstatus\" (\"taskstatid\", \"taskstatname\", \"taskstata" +
                "ddedby\", \"taskstatdateadded\", \"taskstatisactive\") VALUES (:taskstatid, :taskstat" +
                "name, :taskstataddedby, :taskstatdateadded, :taskstatisactive)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "taskstatid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "taskstatid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "taskstatname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "taskstatname";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "taskstataddedby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "taskstataddedby";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "taskstatdateadded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "taskstatdateadded";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "taskstatisactive";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "taskstatisactive";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::SLC_DE_App.Properties.Settings.Default.SLCDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT taskstatid, taskstatname, taskstataddedby, taskstatdateadded, taskstatisac" +
                "tive FROM \"public\".tblslctaskstatus";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SLCDBDataSet.tblslctaskstatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SLCDBDataSet.tblslctaskstatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SLCDBDataSet.tblslctaskstatusDataTable dataTable = new SLCDBDataSet.tblslctaskstatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet.tblslctaskstatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblslctaskstatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long taskstatid, string taskstatname, string taskstataddedby, System.DateTime taskstatdateadded, bool taskstatisactive) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(taskstatid));
            if ((taskstatname == null)) {
                throw new global::System.ArgumentNullException("taskstatname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(taskstatname));
            }
            if ((taskstataddedby == null)) {
                throw new global::System.ArgumentNullException("taskstataddedby");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(taskstataddedby));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(taskstatdateadded));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(taskstatisactive));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbluserTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tbluserTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbluser";
            tableMapping.ColumnMappings.Add("userid", "userid");
            tableMapping.ColumnMappings.Add("userzohoid", "userzohoid");
            tableMapping.ColumnMappings.Add("useremailadd", "useremailadd");
            tableMapping.ColumnMappings.Add("userpass", "userpass");
            tableMapping.ColumnMappings.Add("userfname", "userfname");
            tableMapping.ColumnMappings.Add("userlname", "userlname");
            tableMapping.ColumnMappings.Add("userdesig", "userdesig");
            tableMapping.ColumnMappings.Add("userreportingto", "userreportingto");
            tableMapping.ColumnMappings.Add("userisactive", "userisactive");
            tableMapping.ColumnMappings.Add("userisloggedin", "userisloggedin");
            tableMapping.ColumnMappings.Add("usertotalappuptime", "usertotalappuptime");
            tableMapping.ColumnMappings.Add("usershift", "usershift");
            tableMapping.ColumnMappings.Add("usertotalhrsrendered", "usertotalhrsrendered");
            tableMapping.ColumnMappings.Add("userisadminrole", "userisadminrole");
            tableMapping.ColumnMappings.Add("fullname", "fullname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""public"".""tbluser"" WHERE ((""userid"" = :Original_userid) AND ((:IsNull_userzohoid = 1 AND ""userzohoid"" IS NULL) OR (""userzohoid"" = :Original_userzohoid)) AND ((:IsNull_useremailadd = 1 AND ""useremailadd"" IS NULL) OR (""useremailadd"" = :Original_useremailadd)) AND ((:IsNull_userpass = 1 AND ""userpass"" IS NULL) OR (""userpass"" = :Original_userpass)) AND ((:IsNull_userfname = 1 AND ""userfname"" IS NULL) OR (""userfname"" = :Original_userfname)) AND ((:IsNull_userlname = 1 AND ""userlname"" IS NULL) OR (""userlname"" = :Original_userlname)) AND ((:IsNull_userdesig = 1 AND ""userdesig"" IS NULL) OR (""userdesig"" = :Original_userdesig)) AND ((:IsNull_userreportingto = 1 AND ""userreportingto"" IS NULL) OR (""userreportingto"" = :Original_userreportingto)) AND ((:IsNull_userisactive = 1 AND ""userisactive"" IS NULL) OR (""userisactive"" = :Original_userisactive)) AND ((:IsNull_userisloggedin = 1 AND ""userisloggedin"" IS NULL) OR (""userisloggedin"" = :Original_userisloggedin)) AND ((:IsNull_usertotalappuptime = 1 AND ""usertotalappuptime"" IS NULL) OR (""usertotalappuptime"" = :Original_usertotalappuptime)) AND ((:IsNull_usershift = 1 AND ""usershift"" IS NULL) OR (""usershift"" = :Original_usershift)) AND ((:IsNull_usertotalhrsrendered = 1 AND ""usertotalhrsrendered"" IS NULL) OR (""usertotalhrsrendered"" = :Original_usertotalhrsrendered)) AND ((:IsNull_userisadminrole = 1 AND ""userisadminrole"" IS NULL) OR (""userisadminrole"" = :Original_userisadminrole)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userzohoid";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userzohoid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userzohoid";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userzohoid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_useremailadd";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "useremailadd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_useremailadd";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "useremailadd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userpass";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userpass";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userpass";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userpass";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userfname";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userfname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userfname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userfname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userlname";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userlname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userlname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userlname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userdesig";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userdesig";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userdesig";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userdesig";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userreportingto";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userreportingto";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userreportingto";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userreportingto";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userisactive";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userisactive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userisactive";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisactive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userisloggedin";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userisloggedin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userisloggedin";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisloggedin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_usertotalappuptime";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "usertotalappuptime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_usertotalappuptime";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Interval;
            param.IsNullable = true;
            param.SourceColumn = "usertotalappuptime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_usershift";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "usershift";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_usershift";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "usershift";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_usertotalhrsrendered";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "usertotalhrsrendered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_usertotalhrsrendered";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Interval;
            param.IsNullable = true;
            param.SourceColumn = "usertotalhrsrendered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userisadminrole";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userisadminrole";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userisadminrole";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisadminrole";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""public"".""tbluser"" (""userid"", ""userzohoid"", ""useremailadd"", ""userpass"", ""userfname"", ""userlname"", ""userdesig"", ""userreportingto"", ""userisactive"", ""userisloggedin"", ""usertotalappuptime"", ""usershift"", ""usertotalhrsrendered"", ""userisadminrole"") VALUES (:userid, :userzohoid, :useremailadd, :userpass, :userfname, :userlname, :userdesig, :userreportingto, :userisactive, :userisloggedin, :usertotalappuptime, :usershift, :usertotalhrsrendered, :userisadminrole)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userzohoid";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userzohoid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "useremailadd";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "useremailadd";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userpass";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userpass";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userfname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userfname";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userlname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userlname";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userdesig";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userdesig";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userreportingto";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userreportingto";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userisactive";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisactive";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userisloggedin";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisloggedin";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "usertotalappuptime";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Interval;
            param.IsNullable = true;
            param.SourceColumn = "usertotalappuptime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "usershift";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "usershift";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "usertotalhrsrendered";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Interval;
            param.IsNullable = true;
            param.SourceColumn = "usertotalhrsrendered";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userisadminrole";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisadminrole";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"public\".\"tbluser\" SET \"userid\" = :userid, \"userzohoid\" = :userzohoid, \"us" +
                "eremailadd\" = :useremailadd, \"userpass\" = :userpass, \"userfname\" = :userfname, \"" +
                "userlname\" = :userlname, \"userdesig\" = :userdesig, \"userreportingto\" = :userrepo" +
                "rtingto, \"userisactive\" = :userisactive, \"userisloggedin\" = :userisloggedin, \"us" +
                "ertotalappuptime\" = :usertotalappuptime, \"usershift\" = :usershift, \"usertotalhrs" +
                "rendered\" = :usertotalhrsrendered, \"userisadminrole\" = :userisadminrole WHERE ((" +
                "\"userid\" = :Original_userid) AND ((:IsNull_userzohoid = 1 AND \"userzohoid\" IS NU" +
                "LL) OR (\"userzohoid\" = :Original_userzohoid)) AND ((:IsNull_useremailadd = 1 AND" +
                " \"useremailadd\" IS NULL) OR (\"useremailadd\" = :Original_useremailadd)) AND ((:Is" +
                "Null_userpass = 1 AND \"userpass\" IS NULL) OR (\"userpass\" = :Original_userpass)) " +
                "AND ((:IsNull_userfname = 1 AND \"userfname\" IS NULL) OR (\"userfname\" = :Original" +
                "_userfname)) AND ((:IsNull_userlname = 1 AND \"userlname\" IS NULL) OR (\"userlname" +
                "\" = :Original_userlname)) AND ((:IsNull_userdesig = 1 AND \"userdesig\" IS NULL) O" +
                "R (\"userdesig\" = :Original_userdesig)) AND ((:IsNull_userreportingto = 1 AND \"us" +
                "erreportingto\" IS NULL) OR (\"userreportingto\" = :Original_userreportingto)) AND " +
                "((:IsNull_userisactive = 1 AND \"userisactive\" IS NULL) OR (\"userisactive\" = :Ori" +
                "ginal_userisactive)) AND ((:IsNull_userisloggedin = 1 AND \"userisloggedin\" IS NU" +
                "LL) OR (\"userisloggedin\" = :Original_userisloggedin)) AND ((:IsNull_usertotalapp" +
                "uptime = 1 AND \"usertotalappuptime\" IS NULL) OR (\"usertotalappuptime\" = :Origina" +
                "l_usertotalappuptime)) AND ((:IsNull_usershift = 1 AND \"usershift\" IS NULL) OR (" +
                "\"usershift\" = :Original_usershift)) AND ((:IsNull_usertotalhrsrendered = 1 AND \"" +
                "usertotalhrsrendered\" IS NULL) OR (\"usertotalhrsrendered\" = :Original_usertotalh" +
                "rsrendered)) AND ((:IsNull_userisadminrole = 1 AND \"userisadminrole\" IS NULL) OR" +
                " (\"userisadminrole\" = :Original_userisadminrole)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userzohoid";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userzohoid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "useremailadd";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "useremailadd";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userpass";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userpass";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userfname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userfname";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userlname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userlname";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userdesig";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userdesig";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userreportingto";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userreportingto";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userisactive";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisactive";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userisloggedin";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisloggedin";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "usertotalappuptime";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Interval;
            param.IsNullable = true;
            param.SourceColumn = "usertotalappuptime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "usershift";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "usershift";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "usertotalhrsrendered";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Interval;
            param.IsNullable = true;
            param.SourceColumn = "usertotalhrsrendered";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userisadminrole";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisadminrole";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userzohoid";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userzohoid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userzohoid";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userzohoid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_useremailadd";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "useremailadd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_useremailadd";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "useremailadd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userpass";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userpass";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userpass";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userpass";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userfname";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userfname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userfname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userfname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userlname";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userlname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userlname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userlname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userdesig";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userdesig";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userdesig";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userdesig";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userreportingto";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userreportingto";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userreportingto";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "userreportingto";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userisactive";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userisactive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userisactive";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisactive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userisloggedin";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userisloggedin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userisloggedin";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisloggedin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_usertotalappuptime";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "usertotalappuptime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_usertotalappuptime";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Interval;
            param.IsNullable = true;
            param.SourceColumn = "usertotalappuptime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_usershift";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "usershift";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_usershift";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "usershift";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_usertotalhrsrendered";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "usertotalhrsrendered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_usertotalhrsrendered";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Interval;
            param.IsNullable = true;
            param.SourceColumn = "usertotalhrsrendered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_userisadminrole";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "userisadminrole";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_userisadminrole";
            param.DbType = global::System.Data.DbType.Boolean;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Boolean;
            param.IsNullable = true;
            param.SourceColumn = "userisadminrole";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::SLC_DE_App.Properties.Settings.Default.SLCDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[5];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT userid, userzohoid, useremailadd, userpass, userfname, userlname, userdesig, userreportingto, userisactive, userisloggedin, usertotalappuptime, usershift, usertotalhrsrendered, userisadminrole, CONCAT(userfname,' ',userlname) AS fullname FROM tbluser";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        userid, userzohoid, useremailadd, userpass, userfname, userlname, userdesig, userreportingto, userisactive, userisloggedin, usertotalappuptime, usershift, usertotalhrsrendered, userisadminrole, CONCAT(userfname, ' ', 
                         userlname) AS fullname
FROM            tbluser
WHERE        (userreportingto = :userreportingto) AND (userdesig = 2)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userreportingto";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "userreportingto";
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO \"public\".\"tbluser\" (\"userid\", \"userzohoid\", \"useremailadd\", \"userpass" +
                "\", \"userfname\", \"userlname\", \"userdesig\", \"userreportingto\") VALUES (:userid, :u" +
                "serzohoid, :useremailadd, :userpass, :userfname, :userlname, :userdesig, :userre" +
                "portingto)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "userid";
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userzohoid";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "userzohoid";
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "useremailadd";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "useremailadd";
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userpass";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "userpass";
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userfname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "userfname";
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userlname";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "userlname";
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userdesig";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "userdesig";
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userreportingto";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "userreportingto";
            this._commandCollection[2].Parameters.Add(param);
            this._commandCollection[3] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT userzohoid FROM tbluser WHERE userzohoid = :userzohoid";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "userzohoid";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "userzohoid";
            this._commandCollection[3].Parameters.Add(param);
            this._commandCollection[4] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT MAX(userid) FROM tbluser";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SLCDBDataSet.tbluserDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SLCDBDataSet.tbluserDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SLCDBDataSet.tbluserDataTable dataTable = new SLCDBDataSet.tbluserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_ReportingTo(SLCDBDataSet.tbluserDataTable dataTable, long userreportingto) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(userreportingto));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SLCDBDataSet.tbluserDataTable GetDataBy_ReportingTo(long userreportingto) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(userreportingto));
            SLCDBDataSet.tbluserDataTable dataTable = new SLCDBDataSet.tbluserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet.tbluserDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tbluser");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery_UserRegister(long userid, string userzohoid, string useremailadd, string userpass, string userfname, string userlname, long userdesig, long userreportingto) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((long)(userid));
            if ((userzohoid == null)) {
                throw new global::System.ArgumentNullException("userzohoid");
            }
            else {
                command.Parameters[1].Value = ((string)(userzohoid));
            }
            if ((useremailadd == null)) {
                throw new global::System.ArgumentNullException("useremailadd");
            }
            else {
                command.Parameters[2].Value = ((string)(useremailadd));
            }
            if ((userpass == null)) {
                throw new global::System.ArgumentNullException("userpass");
            }
            else {
                command.Parameters[3].Value = ((string)(userpass));
            }
            if ((userfname == null)) {
                throw new global::System.ArgumentNullException("userfname");
            }
            else {
                command.Parameters[4].Value = ((string)(userfname));
            }
            if ((userlname == null)) {
                throw new global::System.ArgumentNullException("userlname");
            }
            else {
                command.Parameters[5].Value = ((string)(userlname));
            }
            command.Parameters[6].Value = ((long)(userdesig));
            command.Parameters[7].Value = ((long)(userreportingto));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object ScalarQuery_CheckIfExist(string userzohoid) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[3];
            if ((userzohoid == null)) {
                throw new global::System.ArgumentNullException("userzohoid");
            }
            else {
                command.Parameters[0].Value = ((string)(userzohoid));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object ScalarQuery_GetMaxUserID() {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[4];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblslcrecordstaskhistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblslcrecordstaskhistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblslcrecordstaskhistory";
            tableMapping.ColumnMappings.Add("slctaskhistid", "slctaskhistid");
            tableMapping.ColumnMappings.Add("slctaskhistcustcode", "slctaskhistcustcode");
            tableMapping.ColumnMappings.Add("slctaskstart", "slctaskstart");
            tableMapping.ColumnMappings.Add("slctaskend", "slctaskend");
            tableMapping.ColumnMappings.Add("slctaskstatus", "slctaskstatus");
            tableMapping.ColumnMappings.Add("slctaskremarks", "slctaskremarks");
            tableMapping.ColumnMappings.Add("slctaskcalledby", "slctaskcalledby");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""public"".""tblslcrecordstaskhistory"" WHERE ((""slctaskhistid"" = :Original_slctaskhistid) AND (""slctaskhistcustcode"" = :Original_slctaskhistcustcode) AND ((:IsNull_slctaskstart = 1 AND ""slctaskstart"" IS NULL) OR (""slctaskstart"" = :Original_slctaskstart)) AND ((:IsNull_slctaskend = 1 AND ""slctaskend"" IS NULL) OR (""slctaskend"" = :Original_slctaskend)) AND ((:IsNull_slctaskstatus = 1 AND ""slctaskstatus"" IS NULL) OR (""slctaskstatus"" = :Original_slctaskstatus)) AND ((:IsNull_slctaskremarks = 1 AND ""slctaskremarks"" IS NULL) OR (""slctaskremarks"" = :Original_slctaskremarks)) AND ((:IsNull_slctaskcalledby = 1 AND ""slctaskcalledby"" IS NULL) OR (""slctaskcalledby"" = :Original_slctaskcalledby)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskhistcustcode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistcustcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskstart";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskstart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskend";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskend";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskend";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slctaskend";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskstatus";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskremarks";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskremarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskremarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskremarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskcalledby";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskcalledby";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskcalledby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskcalledby";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""public"".""tblslcrecordstaskhistory"" (""slctaskhistid"", ""slctaskhistcustcode"", ""slctaskstart"", ""slctaskend"", ""slctaskstatus"", ""slctaskremarks"", ""slctaskcalledby"") VALUES (:slctaskhistid, :slctaskhistcustcode, :slctaskstart, :slctaskend, :slctaskstatus, :slctaskremarks, :slctaskcalledby)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskhistcustcode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistcustcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskstart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstart";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskend";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slctaskend";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskstatus";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskremarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskremarks";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskcalledby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskcalledby";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""public"".""tblslcrecordstaskhistory"" SET ""slctaskhistid"" = :slctaskhistid, ""slctaskhistcustcode"" = :slctaskhistcustcode, ""slctaskstart"" = :slctaskstart, ""slctaskend"" = :slctaskend, ""slctaskstatus"" = :slctaskstatus, ""slctaskremarks"" = :slctaskremarks, ""slctaskcalledby"" = :slctaskcalledby WHERE ((""slctaskhistid"" = :Original_slctaskhistid) AND (""slctaskhistcustcode"" = :Original_slctaskhistcustcode) AND ((:IsNull_slctaskstart = 1 AND ""slctaskstart"" IS NULL) OR (""slctaskstart"" = :Original_slctaskstart)) AND ((:IsNull_slctaskend = 1 AND ""slctaskend"" IS NULL) OR (""slctaskend"" = :Original_slctaskend)) AND ((:IsNull_slctaskstatus = 1 AND ""slctaskstatus"" IS NULL) OR (""slctaskstatus"" = :Original_slctaskstatus)) AND ((:IsNull_slctaskremarks = 1 AND ""slctaskremarks"" IS NULL) OR (""slctaskremarks"" = :Original_slctaskremarks)) AND ((:IsNull_slctaskcalledby = 1 AND ""slctaskcalledby"" IS NULL) OR (""slctaskcalledby"" = :Original_slctaskcalledby)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskhistcustcode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistcustcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskstart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstart";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskend";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slctaskend";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskstatus";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskremarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskremarks";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskcalledby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskcalledby";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskhistcustcode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistcustcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskstart";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskstart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskend";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskend";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskend";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "slctaskend";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskstatus";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskremarks";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskremarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskremarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskremarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_slctaskcalledby";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "slctaskcalledby";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_slctaskcalledby";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "slctaskcalledby";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::SLC_DE_App.Properties.Settings.Default.SLCDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[6];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT slctaskhistid, slctaskhistcustcode, slctaskstart, slctaskend, slctaskstatu" +
                "s, slctaskremarks, slctaskcalledby FROM tblslcrecordstaskhistory";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT slctaskhistid, slctaskhistcustcode, slctaskstart, slctaskend, slctaskstatu" +
                "s, slctaskremarks, slctaskcalledby FROM tblslcrecordstaskhistory WHERE slctaskhi" +
                "stcustcode=:slctaskhistcustcode";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskhistcustcode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistcustcode";
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "\"public\".getaskhistory";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "custcode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[2].Parameters.Add(param);
            this._commandCollection[3] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT MAX(slctaskhistid) FROM tblslcrecordstaskhistory WHERE slctaskhistcustcode" +
                "=:slctaskhistcustcode";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskhistcustcode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistcustcode";
            this._commandCollection[3].Parameters.Add(param);
            this._commandCollection[4] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT MAX(slctaskhistid) FROM tblslcrecordstaskhistory";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "UPDATE tblslcrecordstaskhistory SET  slctaskstart=:slctaskstart, slctaskend=:slct" +
                "askend, slctaskstatus=:slctaskstatus, slctaskremarks = :slctaskremarks WHERE slc" +
                "taskhistid=:slctaskhistid";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskstart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstart";
            this._commandCollection[5].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskend";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slctaskend";
            this._commandCollection[5].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskstatus";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slctaskstatus";
            this._commandCollection[5].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskremarks";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slctaskremarks";
            this._commandCollection[5].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "slctaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "slctaskhistid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[5].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SLCDBDataSet.tblslcrecordstaskhistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SLCDBDataSet.tblslcrecordstaskhistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SLCDBDataSet.tblslcrecordstaskhistoryDataTable dataTable = new SLCDBDataSet.tblslcrecordstaskhistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CustCode(SLCDBDataSet.tblslcrecordstaskhistoryDataTable dataTable, string slctaskhistcustcode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((slctaskhistcustcode == null)) {
                throw new global::System.ArgumentNullException("slctaskhistcustcode");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(slctaskhistcustcode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SLCDBDataSet.tblslcrecordstaskhistoryDataTable GetDataBy_CustCode(string slctaskhistcustcode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((slctaskhistcustcode == null)) {
                throw new global::System.ArgumentNullException("slctaskhistcustcode");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(slctaskhistcustcode));
            }
            SLCDBDataSet.tblslcrecordstaskhistoryDataTable dataTable = new SLCDBDataSet.tblslcrecordstaskhistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_SP_CustCode(SLCDBDataSet.tblslcrecordstaskhistoryDataTable dataTable, string custcode) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((custcode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(custcode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SLCDBDataSet.tblslcrecordstaskhistoryDataTable GetDataBy_SP_CustCode(string custcode) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((custcode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(custcode));
            }
            SLCDBDataSet.tblslcrecordstaskhistoryDataTable dataTable = new SLCDBDataSet.tblslcrecordstaskhistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet.tblslcrecordstaskhistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblslcrecordstaskhistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_slctaskhistid, string Original_slctaskhistcustcode, System.DateTime Original_slctaskstart, System.DateTime Original_slctaskend, string Original_slctaskstatus, string Original_slctaskremarks, string Original_slctaskcalledby) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_slctaskhistid));
            if ((Original_slctaskhistcustcode == null)) {
                throw new global::System.ArgumentNullException("Original_slctaskhistcustcode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_slctaskhistcustcode));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_slctaskstart));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_slctaskend));
            if ((Original_slctaskstatus == null)) {
                throw new global::System.ArgumentNullException("Original_slctaskstatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_slctaskstatus));
            }
            if ((Original_slctaskremarks == null)) {
                throw new global::System.ArgumentNullException("Original_slctaskremarks");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_slctaskremarks));
            }
            if ((Original_slctaskcalledby == null)) {
                throw new global::System.ArgumentNullException("Original_slctaskcalledby");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_slctaskcalledby));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long slctaskhistid, string slctaskhistcustcode, System.DateTime slctaskstart, System.DateTime slctaskend, string slctaskstatus, string slctaskremarks, string slctaskcalledby) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(slctaskhistid));
            if ((slctaskhistcustcode == null)) {
                throw new global::System.ArgumentNullException("slctaskhistcustcode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(slctaskhistcustcode));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(slctaskstart));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(slctaskend));
            if ((slctaskstatus == null)) {
                throw new global::System.ArgumentNullException("slctaskstatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(slctaskstatus));
            }
            if ((slctaskremarks == null)) {
                throw new global::System.ArgumentNullException("slctaskremarks");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(slctaskremarks));
            }
            if ((slctaskcalledby == null)) {
                throw new global::System.ArgumentNullException("slctaskcalledby");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(slctaskcalledby));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long slctaskhistid, string slctaskhistcustcode, System.DateTime slctaskstart, System.DateTime slctaskend, string slctaskstatus, string slctaskremarks, string slctaskcalledby, long Original_slctaskhistid, string Original_slctaskhistcustcode, System.DateTime Original_slctaskstart, System.DateTime Original_slctaskend, string Original_slctaskstatus, string Original_slctaskremarks, string Original_slctaskcalledby) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(slctaskhistid));
            if ((slctaskhistcustcode == null)) {
                throw new global::System.ArgumentNullException("slctaskhistcustcode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(slctaskhistcustcode));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(slctaskstart));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(slctaskend));
            if ((slctaskstatus == null)) {
                throw new global::System.ArgumentNullException("slctaskstatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(slctaskstatus));
            }
            if ((slctaskremarks == null)) {
                throw new global::System.ArgumentNullException("slctaskremarks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(slctaskremarks));
            }
            if ((slctaskcalledby == null)) {
                throw new global::System.ArgumentNullException("slctaskcalledby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(slctaskcalledby));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_slctaskhistid));
            if ((Original_slctaskhistcustcode == null)) {
                throw new global::System.ArgumentNullException("Original_slctaskhistcustcode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_slctaskhistcustcode));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_slctaskstart));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_slctaskend));
            if ((Original_slctaskstatus == null)) {
                throw new global::System.ArgumentNullException("Original_slctaskstatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_slctaskstatus));
            }
            if ((Original_slctaskremarks == null)) {
                throw new global::System.ArgumentNullException("Original_slctaskremarks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_slctaskremarks));
            }
            if ((Original_slctaskcalledby == null)) {
                throw new global::System.ArgumentNullException("Original_slctaskcalledby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_slctaskcalledby));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string slctaskhistcustcode, System.DateTime slctaskstart, System.DateTime slctaskend, string slctaskstatus, string slctaskremarks, string slctaskcalledby, long Original_slctaskhistid, string Original_slctaskhistcustcode, System.DateTime Original_slctaskstart, System.DateTime Original_slctaskend, string Original_slctaskstatus, string Original_slctaskremarks, string Original_slctaskcalledby) {
            return this.Update(Original_slctaskhistid, slctaskhistcustcode, slctaskstart, slctaskend, slctaskstatus, slctaskremarks, slctaskcalledby, Original_slctaskhistid, Original_slctaskhistcustcode, Original_slctaskstart, Original_slctaskend, Original_slctaskstatus, Original_slctaskremarks, Original_slctaskcalledby);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<long> ScalarQuery_GetMaxByCustCode(string slctaskhistcustcode) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[3];
            if ((slctaskhistcustcode == null)) {
                throw new global::System.ArgumentNullException("slctaskhistcustcode");
            }
            else {
                command.Parameters[0].Value = ((string)(slctaskhistcustcode));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<long>();
            }
            else {
                return new global::System.Nullable<long>(((long)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object ScalarQuery_GetMaxTaskHistID() {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[4];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery_UpdateTimeStatusRemarks(System.DateTime slctaskstart, System.DateTime slctaskend, string slctaskstatus, string slctaskremarks, long slctaskhistid) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[5];
            command.Parameters[0].Value = ((System.DateTime)(slctaskstart));
            command.Parameters[1].Value = ((System.DateTime)(slctaskend));
            if ((slctaskstatus == null)) {
                throw new global::System.ArgumentNullException("slctaskstatus");
            }
            else {
                command.Parameters[2].Value = ((string)(slctaskstatus));
            }
            if ((slctaskremarks == null)) {
                throw new global::System.ArgumentNullException("slctaskremarks");
            }
            else {
                command.Parameters[3].Value = ((string)(slctaskremarks));
            }
            command.Parameters[4].Value = ((long)(slctaskhistid));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class getaskhistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public getaskhistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "getaskhistory";
            tableMapping.ColumnMappings.Add("slctaskhistid", "slctaskhistid");
            tableMapping.ColumnMappings.Add("slctaskhistcustcode", "slctaskhistcustcode");
            tableMapping.ColumnMappings.Add("slctaskstart", "slctaskstart");
            tableMapping.ColumnMappings.Add("slctaskend", "slctaskend");
            tableMapping.ColumnMappings.Add("slctaskstatus", "slctaskstatus");
            tableMapping.ColumnMappings.Add("slctaskremarks", "slctaskremarks");
            tableMapping.ColumnMappings.Add("slctaskcalledby", "slctaskcalledby");
            tableMapping.ColumnMappings.Add("slctaskduration", "slctaskduration");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::SLC_DE_App.Properties.Settings.Default.SLCDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "\"public\".getaskhistory";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "custcode";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill_SPGetTaskHistory(SLCDBDataSet.getaskhistoryDataTable dataTable, string custcode) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((custcode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(custcode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SLCDBDataSet.getaskhistoryDataTable GetData_SPGetTaskHistory(string custcode) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((custcode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(custcode));
            }
            SLCDBDataSet.getaskhistoryDataTable dataTable = new SLCDBDataSet.getaskhistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblslcrecordstaskhistoryeditsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblslcrecordstaskhistoryeditsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblslcrecordstaskhistoryedits";
            tableMapping.ColumnMappings.Add("editno", "editno");
            tableMapping.ColumnMappings.Add("edittaskhistid", "edittaskhistid");
            tableMapping.ColumnMappings.Add("edituser", "edituser");
            tableMapping.ColumnMappings.Add("editdatecreated", "editdatecreated");
            tableMapping.ColumnMappings.Add("editcolumndata", "editcolumndata");
            tableMapping.ColumnMappings.Add("editoldvalue", "editoldvalue");
            tableMapping.ColumnMappings.Add("editnewvalue", "editnewvalue");
            tableMapping.ColumnMappings.Add("editreason", "editreason");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""public"".""tblslcrecordstaskhistoryedits"" WHERE ((""editno"" = :Original_editno) AND (""edittaskhistid"" = :Original_edittaskhistid) AND ((:IsNull_edituser = 1 AND ""edituser"" IS NULL) OR (""edituser"" = :Original_edituser)) AND ((:IsNull_editdatecreated = 1 AND ""editdatecreated"" IS NULL) OR (""editdatecreated"" = :Original_editdatecreated)) AND ((:IsNull_editcolumndata = 1 AND ""editcolumndata"" IS NULL) OR (""editcolumndata"" = :Original_editcolumndata)) AND ((:IsNull_editoldvalue = 1 AND ""editoldvalue"" IS NULL) OR (""editoldvalue"" = :Original_editoldvalue)) AND ((:IsNull_editnewvalue = 1 AND ""editnewvalue"" IS NULL) OR (""editnewvalue"" = :Original_editnewvalue)) AND ((:IsNull_editreason = 1 AND ""editreason"" IS NULL) OR (""editreason"" = :Original_editreason)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editno";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "editno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_edittaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "edittaskhistid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_edituser";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "edituser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_edituser";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "edituser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editdatecreated";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editdatecreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editdatecreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "editdatecreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editcolumndata";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editcolumndata";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editcolumndata";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editcolumndata";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editoldvalue";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editoldvalue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editoldvalue";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editoldvalue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editnewvalue";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editnewvalue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editnewvalue";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editnewvalue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editreason";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editreason";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editreason";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editreason";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""public"".""tblslcrecordstaskhistoryedits"" (""editno"", ""edittaskhistid"", ""edituser"", ""editdatecreated"", ""editcolumndata"", ""editoldvalue"", ""editnewvalue"", ""editreason"") VALUES (:editno, :edittaskhistid, :edituser, :editdatecreated, :editcolumndata, :editoldvalue, :editnewvalue, :editreason)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editno";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "editno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "edittaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "edittaskhistid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "edituser";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "edituser";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editdatecreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "editdatecreated";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editcolumndata";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editcolumndata";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editoldvalue";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editoldvalue";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editnewvalue";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editnewvalue";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editreason";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editreason";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""public"".""tblslcrecordstaskhistoryedits"" SET ""editno"" = :editno, ""edittaskhistid"" = :edittaskhistid, ""edituser"" = :edituser, ""editdatecreated"" = :editdatecreated, ""editcolumndata"" = :editcolumndata, ""editoldvalue"" = :editoldvalue, ""editnewvalue"" = :editnewvalue, ""editreason"" = :editreason WHERE ((""editno"" = :Original_editno) AND (""edittaskhistid"" = :Original_edittaskhistid) AND ((:IsNull_edituser = 1 AND ""edituser"" IS NULL) OR (""edituser"" = :Original_edituser)) AND ((:IsNull_editdatecreated = 1 AND ""editdatecreated"" IS NULL) OR (""editdatecreated"" = :Original_editdatecreated)) AND ((:IsNull_editcolumndata = 1 AND ""editcolumndata"" IS NULL) OR (""editcolumndata"" = :Original_editcolumndata)) AND ((:IsNull_editoldvalue = 1 AND ""editoldvalue"" IS NULL) OR (""editoldvalue"" = :Original_editoldvalue)) AND ((:IsNull_editnewvalue = 1 AND ""editnewvalue"" IS NULL) OR (""editnewvalue"" = :Original_editnewvalue)) AND ((:IsNull_editreason = 1 AND ""editreason"" IS NULL) OR (""editreason"" = :Original_editreason)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editno";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "editno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "edittaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "edittaskhistid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "edituser";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "edituser";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editdatecreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "editdatecreated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editcolumndata";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editcolumndata";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editoldvalue";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editoldvalue";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editnewvalue";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editnewvalue";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "editreason";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editreason";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editno";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "editno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_edittaskhistid";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "edittaskhistid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_edituser";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "edituser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_edituser";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "edituser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editdatecreated";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editdatecreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editdatecreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.TimeStamp;
            param.IsNullable = true;
            param.SourceColumn = "editdatecreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editcolumndata";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editcolumndata";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editcolumndata";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editcolumndata";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editoldvalue";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editoldvalue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editoldvalue";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editoldvalue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editnewvalue";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editnewvalue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editnewvalue";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editnewvalue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_editreason";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "editreason";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_editreason";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "editreason";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::SLC_DE_App.Properties.Settings.Default.SLCDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[2];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT editno, edittaskhistid, edituser, editdatecreated, editcolumndata, editold" +
                "value, editnewvalue, editreason FROM \"public\".tblslcrecordstaskhistoryedits";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT MAX(editno) FROM tblslcrecordstaskhistoryedits";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SLCDBDataSet.tblslcrecordstaskhistoryeditsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SLCDBDataSet.tblslcrecordstaskhistoryeditsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SLCDBDataSet.tblslcrecordstaskhistoryeditsDataTable dataTable = new SLCDBDataSet.tblslcrecordstaskhistoryeditsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet.tblslcrecordstaskhistoryeditsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SLCDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblslcrecordstaskhistoryedits");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_editno, long Original_edittaskhistid, string Original_edituser, System.DateTime Original_editdatecreated, string Original_editcolumndata, string Original_editoldvalue, string Original_editnewvalue, string Original_editreason) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_editno));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_edittaskhistid));
            if ((Original_edituser == null)) {
                throw new global::System.ArgumentNullException("Original_edituser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_edituser));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_editdatecreated));
            if ((Original_editcolumndata == null)) {
                throw new global::System.ArgumentNullException("Original_editcolumndata");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_editcolumndata));
            }
            if ((Original_editoldvalue == null)) {
                throw new global::System.ArgumentNullException("Original_editoldvalue");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_editoldvalue));
            }
            if ((Original_editnewvalue == null)) {
                throw new global::System.ArgumentNullException("Original_editnewvalue");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_editnewvalue));
            }
            if ((Original_editreason == null)) {
                throw new global::System.ArgumentNullException("Original_editreason");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_editreason));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long editno, long edittaskhistid, string edituser, System.DateTime editdatecreated, string editcolumndata, string editoldvalue, string editnewvalue, string editreason) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(editno));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(edittaskhistid));
            if ((edituser == null)) {
                throw new global::System.ArgumentNullException("edituser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(edituser));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(editdatecreated));
            if ((editcolumndata == null)) {
                throw new global::System.ArgumentNullException("editcolumndata");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(editcolumndata));
            }
            if ((editoldvalue == null)) {
                throw new global::System.ArgumentNullException("editoldvalue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(editoldvalue));
            }
            if ((editnewvalue == null)) {
                throw new global::System.ArgumentNullException("editnewvalue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(editnewvalue));
            }
            if ((editreason == null)) {
                throw new global::System.ArgumentNullException("editreason");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(editreason));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long editno, 
                    long edittaskhistid, 
                    string edituser, 
                    System.DateTime editdatecreated, 
                    string editcolumndata, 
                    string editoldvalue, 
                    string editnewvalue, 
                    string editreason, 
                    long Original_editno, 
                    long Original_edittaskhistid, 
                    string Original_edituser, 
                    System.DateTime Original_editdatecreated, 
                    string Original_editcolumndata, 
                    string Original_editoldvalue, 
                    string Original_editnewvalue, 
                    string Original_editreason) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(editno));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(edittaskhistid));
            if ((edituser == null)) {
                throw new global::System.ArgumentNullException("edituser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(edituser));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(editdatecreated));
            if ((editcolumndata == null)) {
                throw new global::System.ArgumentNullException("editcolumndata");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(editcolumndata));
            }
            if ((editoldvalue == null)) {
                throw new global::System.ArgumentNullException("editoldvalue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(editoldvalue));
            }
            if ((editnewvalue == null)) {
                throw new global::System.ArgumentNullException("editnewvalue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(editnewvalue));
            }
            if ((editreason == null)) {
                throw new global::System.ArgumentNullException("editreason");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(editreason));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_editno));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_edittaskhistid));
            if ((Original_edituser == null)) {
                throw new global::System.ArgumentNullException("Original_edituser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_edituser));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_editdatecreated));
            if ((Original_editcolumndata == null)) {
                throw new global::System.ArgumentNullException("Original_editcolumndata");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_editcolumndata));
            }
            if ((Original_editoldvalue == null)) {
                throw new global::System.ArgumentNullException("Original_editoldvalue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_editoldvalue));
            }
            if ((Original_editnewvalue == null)) {
                throw new global::System.ArgumentNullException("Original_editnewvalue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_editnewvalue));
            }
            if ((Original_editreason == null)) {
                throw new global::System.ArgumentNullException("Original_editreason");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_editreason));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string edituser, System.DateTime editdatecreated, string editcolumndata, string editoldvalue, string editnewvalue, string editreason, long Original_editno, long Original_edittaskhistid, string Original_edituser, System.DateTime Original_editdatecreated, string Original_editcolumndata, string Original_editoldvalue, string Original_editnewvalue, string Original_editreason) {
            return this.Update(Original_editno, Original_edittaskhistid, edituser, editdatecreated, editcolumndata, editoldvalue, editnewvalue, editreason, Original_editno, Original_edittaskhistid, Original_edituser, Original_editdatecreated, Original_editcolumndata, Original_editoldvalue, Original_editnewvalue, Original_editreason);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<long> ScalarQuery_GetMaxEditNo() {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<long>();
            }
            else {
                return new global::System.Nullable<long>(((long)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class getslctopcustomerpendingamountTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public getslctopcustomerpendingamountTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "getslctopcustomerpendingamount";
            tableMapping.ColumnMappings.Add("slc_customercode", "slc_customercode");
            tableMapping.ColumnMappings.Add("slc_customerpendingamount", "slc_customerpendingamount");
            tableMapping.ColumnMappings.Add("slc_assignee", "slc_assignee");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::SLC_DE_App.Properties.Settings.Default.SLCDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "\"public\".getslctopcustomerpendingamount";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SLCDBDataSet.getslctopcustomerpendingamountDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SLCDBDataSet.getslctopcustomerpendingamountDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SLCDBDataSet.getslctopcustomerpendingamountDataTable dataTable = new SLCDBDataSet.getslctopcustomerpendingamountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tbldesignationTableAdapter _tbldesignationTableAdapter;
        
        private tblslcrecordsTableAdapter _tblslcrecordsTableAdapter;
        
        private tblslctaskstatusTableAdapter _tblslctaskstatusTableAdapter;
        
        private tbluserTableAdapter _tbluserTableAdapter;
        
        private tblslcrecordstaskhistoryTableAdapter _tblslcrecordstaskhistoryTableAdapter;
        
        private tblslcrecordstaskhistoryeditsTableAdapter _tblslcrecordstaskhistoryeditsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tbldesignationTableAdapter tbldesignationTableAdapter {
            get {
                return this._tbldesignationTableAdapter;
            }
            set {
                this._tbldesignationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblslcrecordsTableAdapter tblslcrecordsTableAdapter {
            get {
                return this._tblslcrecordsTableAdapter;
            }
            set {
                this._tblslcrecordsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblslctaskstatusTableAdapter tblslctaskstatusTableAdapter {
            get {
                return this._tblslctaskstatusTableAdapter;
            }
            set {
                this._tblslctaskstatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tbluserTableAdapter tbluserTableAdapter {
            get {
                return this._tbluserTableAdapter;
            }
            set {
                this._tbluserTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblslcrecordstaskhistoryTableAdapter tblslcrecordstaskhistoryTableAdapter {
            get {
                return this._tblslcrecordstaskhistoryTableAdapter;
            }
            set {
                this._tblslcrecordstaskhistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblslcrecordstaskhistoryeditsTableAdapter tblslcrecordstaskhistoryeditsTableAdapter {
            get {
                return this._tblslcrecordstaskhistoryeditsTableAdapter;
            }
            set {
                this._tblslcrecordstaskhistoryeditsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tbldesignationTableAdapter != null) 
                            && (this._tbldesignationTableAdapter.Connection != null))) {
                    return this._tbldesignationTableAdapter.Connection;
                }
                if (((this._tblslcrecordsTableAdapter != null) 
                            && (this._tblslcrecordsTableAdapter.Connection != null))) {
                    return this._tblslcrecordsTableAdapter.Connection;
                }
                if (((this._tblslctaskstatusTableAdapter != null) 
                            && (this._tblslctaskstatusTableAdapter.Connection != null))) {
                    return this._tblslctaskstatusTableAdapter.Connection;
                }
                if (((this._tbluserTableAdapter != null) 
                            && (this._tbluserTableAdapter.Connection != null))) {
                    return this._tbluserTableAdapter.Connection;
                }
                if (((this._tblslcrecordstaskhistoryTableAdapter != null) 
                            && (this._tblslcrecordstaskhistoryTableAdapter.Connection != null))) {
                    return this._tblslcrecordstaskhistoryTableAdapter.Connection;
                }
                if (((this._tblslcrecordstaskhistoryeditsTableAdapter != null) 
                            && (this._tblslcrecordstaskhistoryeditsTableAdapter.Connection != null))) {
                    return this._tblslcrecordstaskhistoryeditsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tbldesignationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblslcrecordsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblslctaskstatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tbluserTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblslcrecordstaskhistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblslcrecordstaskhistoryeditsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SLCDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblslcrecordstaskhistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblslcrecordstaskhistory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblslcrecordstaskhistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbldesignationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbldesignation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbldesignationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblslcrecordsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblslcrecords.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblslcrecordsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblslctaskstatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblslctaskstatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblslctaskstatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbluserTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbluser.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbluserTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblslcrecordstaskhistoryeditsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblslcrecordstaskhistoryedits.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblslcrecordstaskhistoryeditsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SLCDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblslcrecordstaskhistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblslcrecordstaskhistory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblslcrecordstaskhistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbldesignationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbldesignation.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbldesignationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblslcrecordsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblslcrecords.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblslcrecordsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblslctaskstatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblslctaskstatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblslctaskstatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbluserTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbluser.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbluserTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblslcrecordstaskhistoryeditsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblslcrecordstaskhistoryedits.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblslcrecordstaskhistoryeditsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SLCDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tblslcrecordstaskhistoryeditsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblslcrecordstaskhistoryedits.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblslcrecordstaskhistoryeditsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbluserTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbluser.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbluserTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblslctaskstatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblslctaskstatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblslctaskstatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblslcrecordsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblslcrecords.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblslcrecordsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbldesignationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbldesignation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbldesignationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblslcrecordstaskhistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblslcrecordstaskhistory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblslcrecordstaskhistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SLCDBDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tbldesignationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbldesignationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblslcrecordsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblslcrecordsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblslctaskstatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblslctaskstatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tbluserTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbluserTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblslcrecordstaskhistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblslcrecordstaskhistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblslcrecordstaskhistoryeditsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblslcrecordstaskhistoryeditsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tbldesignationTableAdapter != null)) {
                    revertConnections.Add(this._tbldesignationTableAdapter, this._tbldesignationTableAdapter.Connection);
                    this._tbldesignationTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._tbldesignationTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._tbldesignationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbldesignationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbldesignationTableAdapter.Adapter);
                    }
                }
                if ((this._tblslcrecordsTableAdapter != null)) {
                    revertConnections.Add(this._tblslcrecordsTableAdapter, this._tblslcrecordsTableAdapter.Connection);
                    this._tblslcrecordsTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._tblslcrecordsTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._tblslcrecordsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblslcrecordsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblslcrecordsTableAdapter.Adapter);
                    }
                }
                if ((this._tblslctaskstatusTableAdapter != null)) {
                    revertConnections.Add(this._tblslctaskstatusTableAdapter, this._tblslctaskstatusTableAdapter.Connection);
                    this._tblslctaskstatusTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._tblslctaskstatusTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._tblslctaskstatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblslctaskstatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblslctaskstatusTableAdapter.Adapter);
                    }
                }
                if ((this._tbluserTableAdapter != null)) {
                    revertConnections.Add(this._tbluserTableAdapter, this._tbluserTableAdapter.Connection);
                    this._tbluserTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._tbluserTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._tbluserTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbluserTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbluserTableAdapter.Adapter);
                    }
                }
                if ((this._tblslcrecordstaskhistoryTableAdapter != null)) {
                    revertConnections.Add(this._tblslcrecordstaskhistoryTableAdapter, this._tblslcrecordstaskhistoryTableAdapter.Connection);
                    this._tblslcrecordstaskhistoryTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._tblslcrecordstaskhistoryTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._tblslcrecordstaskhistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblslcrecordstaskhistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblslcrecordstaskhistoryTableAdapter.Adapter);
                    }
                }
                if ((this._tblslcrecordstaskhistoryeditsTableAdapter != null)) {
                    revertConnections.Add(this._tblslcrecordstaskhistoryeditsTableAdapter, this._tblslcrecordstaskhistoryeditsTableAdapter.Connection);
                    this._tblslcrecordstaskhistoryeditsTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._tblslcrecordstaskhistoryeditsTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._tblslcrecordstaskhistoryeditsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblslcrecordstaskhistoryeditsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblslcrecordstaskhistoryeditsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tbldesignationTableAdapter != null)) {
                    this._tbldesignationTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._tbldesignationTableAdapter]));
                    this._tbldesignationTableAdapter.Transaction = null;
                }
                if ((this._tblslcrecordsTableAdapter != null)) {
                    this._tblslcrecordsTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._tblslcrecordsTableAdapter]));
                    this._tblslcrecordsTableAdapter.Transaction = null;
                }
                if ((this._tblslctaskstatusTableAdapter != null)) {
                    this._tblslctaskstatusTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._tblslctaskstatusTableAdapter]));
                    this._tblslctaskstatusTableAdapter.Transaction = null;
                }
                if ((this._tbluserTableAdapter != null)) {
                    this._tbluserTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._tbluserTableAdapter]));
                    this._tbluserTableAdapter.Transaction = null;
                }
                if ((this._tblslcrecordstaskhistoryTableAdapter != null)) {
                    this._tblslcrecordstaskhistoryTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._tblslcrecordstaskhistoryTableAdapter]));
                    this._tblslcrecordstaskhistoryTableAdapter.Transaction = null;
                }
                if ((this._tblslcrecordstaskhistoryeditsTableAdapter != null)) {
                    this._tblslcrecordstaskhistoryeditsTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._tblslcrecordstaskhistoryeditsTableAdapter]));
                    this._tblslcrecordstaskhistoryeditsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591